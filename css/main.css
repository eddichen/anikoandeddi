/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.grid{list-style:none;margin:0;padding:0;margin-left:-24px}.grid__item{display:inline-block;padding-left:24px;vertical-align:top;width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.grid--rev{direction:rtl;text-align:left}.grid--rev>.grid__item{direction:ltr;text-align:left}.grid--full{margin-left:0}.grid--full>.grid__item{padding-left:0}.grid--right{text-align:right}.grid--right>.grid__item{text-align:left}.grid--center{text-align:center}.grid--center>.grid__item{text-align:left}.grid--middle>.grid__item{vertical-align:middle}.grid--bottom>.grid__item{vertical-align:bottom}.grid--narrow{margin-left:-12px}.grid--narrow>.grid__item{padding-left:12px}.grid--wide{margin-left:-48px}.grid--wide>.grid__item{padding-left:48px}.one-whole{width:100%}.one-half,.two-quarters,.three-sixths,.four-eighths,.five-tenths,.six-twelfths{width:50%}.one-third,.two-sixths,.four-twelfths{width:33.333%}.two-thirds,.four-sixths,.eight-twelfths{width:66.666%}.one-quarter,.two-eighths,.three-twelfths{width:25%}.three-quarters,.six-eighths,.nine-twelfths{width:75%}.one-fifth,.two-tenths{width:20%}.two-fifths,.four-tenths{width:40%}.three-fifths,.six-tenths{width:60%}.four-fifths,.eight-tenths{width:80%}.one-sixth,.two-twelfths{width:16.666%}.five-sixths,.ten-twelfths{width:83.333%}.one-eighth{width:12.5%}.three-eighths{width:37.5%}.five-eighths{width:62.5%}.seven-eighths{width:87.5%}.one-tenth{width:10%}.three-tenths{width:30%}.seven-tenths{width:70%}.nine-tenths{width:90%}.one-twelfth{width:8.333%}.five-twelfths{width:41.666%}.seven-twelfths{width:58.333%}.eleven-twelfths{width:91.666%}@media only screen and (max-width: 480px){.palm--one-whole{width:100%}.palm--one-half,.palm--two-quarters,.palm--three-sixths,.palm--four-eighths,.palm--five-tenths,.palm--six-twelfths{width:50%}.palm--one-third,.palm--two-sixths,.palm--four-twelfths{width:33.333%}.palm--two-thirds,.palm--four-sixths,.palm--eight-twelfths{width:66.666%}.palm--one-quarter,.palm--two-eighths,.palm--three-twelfths{width:25%}.palm--three-quarters,.palm--six-eighths,.palm--nine-twelfths{width:75%}.palm--one-fifth,.palm--two-tenths{width:20%}.palm--two-fifths,.palm--four-tenths{width:40%}.palm--three-fifths,.palm--six-tenths{width:60%}.palm--four-fifths,.palm--eight-tenths{width:80%}.palm--one-sixth,.palm--two-twelfths{width:16.666%}.palm--five-sixths,.palm--ten-twelfths{width:83.333%}.palm--one-eighth{width:12.5%}.palm--three-eighths{width:37.5%}.palm--five-eighths{width:62.5%}.palm--seven-eighths{width:87.5%}.palm--one-tenth{width:10%}.palm--three-tenths{width:30%}.palm--seven-tenths{width:70%}.palm--nine-tenths{width:90%}.palm--one-twelfth{width:8.333%}.palm--five-twelfths{width:41.666%}.palm--seven-twelfths{width:58.333%}.palm--eleven-twelfths{width:91.666%}}@media only screen and (min-width: 481px) and (max-width: 1023px){.lap--one-whole{width:100%}.lap--one-half,.lap--two-quarters,.lap--three-sixths,.lap--four-eighths,.lap--five-tenths,.lap--six-twelfths{width:50%}.lap--one-third,.lap--two-sixths,.lap--four-twelfths{width:33.333%}.lap--two-thirds,.lap--four-sixths,.lap--eight-twelfths{width:66.666%}.lap--one-quarter,.lap--two-eighths,.lap--three-twelfths{width:25%}.lap--three-quarters,.lap--six-eighths,.lap--nine-twelfths{width:75%}.lap--one-fifth,.lap--two-tenths{width:20%}.lap--two-fifths,.lap--four-tenths{width:40%}.lap--three-fifths,.lap--six-tenths{width:60%}.lap--four-fifths,.lap--eight-tenths{width:80%}.lap--one-sixth,.lap--two-twelfths{width:16.666%}.lap--five-sixths,.lap--ten-twelfths{width:83.333%}.lap--one-eighth{width:12.5%}.lap--three-eighths{width:37.5%}.lap--five-eighths{width:62.5%}.lap--seven-eighths{width:87.5%}.lap--one-tenth{width:10%}.lap--three-tenths{width:30%}.lap--seven-tenths{width:70%}.lap--nine-tenths{width:90%}.lap--one-twelfth{width:8.333%}.lap--five-twelfths{width:41.666%}.lap--seven-twelfths{width:58.333%}.lap--eleven-twelfths{width:91.666%}}@media only screen and (max-width: 1023px){.portable--one-whole{width:100%}.portable--one-half,.portable--two-quarters,.portable--three-sixths,.portable--four-eighths,.portable--five-tenths,.portable--six-twelfths{width:50%}.portable--one-third,.portable--two-sixths,.portable--four-twelfths{width:33.333%}.portable--two-thirds,.portable--four-sixths,.portable--eight-twelfths{width:66.666%}.portable--one-quarter,.portable--two-eighths,.portable--three-twelfths{width:25%}.portable--three-quarters,.portable--six-eighths,.portable--nine-twelfths{width:75%}.portable--one-fifth,.portable--two-tenths{width:20%}.portable--two-fifths,.portable--four-tenths{width:40%}.portable--three-fifths,.portable--six-tenths{width:60%}.portable--four-fifths,.portable--eight-tenths{width:80%}.portable--one-sixth,.portable--two-twelfths{width:16.666%}.portable--five-sixths,.portable--ten-twelfths{width:83.333%}.portable--one-eighth{width:12.5%}.portable--three-eighths{width:37.5%}.portable--five-eighths{width:62.5%}.portable--seven-eighths{width:87.5%}.portable--one-tenth{width:10%}.portable--three-tenths{width:30%}.portable--seven-tenths{width:70%}.portable--nine-tenths{width:90%}.portable--one-twelfth{width:8.333%}.portable--five-twelfths{width:41.666%}.portable--seven-twelfths{width:58.333%}.portable--eleven-twelfths{width:91.666%}}@media only screen and (min-width: 1024px){.desk--one-whole{width:100%}.desk--one-half,.desk--two-quarters,.desk--three-sixths,.desk--four-eighths,.desk--five-tenths,.desk--six-twelfths{width:50%}.desk--one-third,.desk--two-sixths,.desk--four-twelfths{width:33.333%}.desk--two-thirds,.desk--four-sixths,.desk--eight-twelfths{width:66.666%}.desk--one-quarter,.desk--two-eighths,.desk--three-twelfths{width:25%}.desk--three-quarters,.desk--six-eighths,.desk--nine-twelfths{width:75%}.desk--one-fifth,.desk--two-tenths{width:20%}.desk--two-fifths,.desk--four-tenths{width:40%}.desk--three-fifths,.desk--six-tenths{width:60%}.desk--four-fifths,.desk--eight-tenths{width:80%}.desk--one-sixth,.desk--two-twelfths{width:16.666%}.desk--five-sixths,.desk--ten-twelfths{width:83.333%}.desk--one-eighth{width:12.5%}.desk--three-eighths{width:37.5%}.desk--five-eighths{width:62.5%}.desk--seven-eighths{width:87.5%}.desk--one-tenth{width:10%}.desk--three-tenths{width:30%}.desk--seven-tenths{width:70%}.desk--nine-tenths{width:90%}.desk--one-twelfth{width:8.333%}.desk--five-twelfths{width:41.666%}.desk--seven-twelfths{width:58.333%}.desk--eleven-twelfths{width:91.666%}}.grid__container{margin:0 auto;padding:0 24px;max-width:620px}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{font-family:'Source Sans Pro', sans-serif;line-height:1.7}.nav-container{position:absolute;bottom:0;width:100%;background-color:rgba(0,0,0,0.5)}.nav{display:table;margin:0 auto}.nav__list{display:table-row;list-style-type:none;margin:0;padding:0}.nav__item{display:table-cell}.nav__item a{display:block;color:#fff;text-decoration:none;font-family:'Great Vibes', cursive;font-size:40px;padding:20px 30px;line-height:1}.nav__item a:hover{text-decoration:underline}.section__map{position:relative;z-index:4}.section__map,.map{height:50vh;width:100%}.map{border:0}.section{height:100vh}.section__half{height:50vh}.section__content{position:relative;z-index:4;padding:30px 0;background-color:#fff}.section__title{font-family:'Great Vibes', cursive;font-size:72px;font-weight:normal;margin:0}.logo{position:absolute;top:50%;left:50%;transform:translateX(-50%) translateY(-50%)}.logo-names{fill:#fff;width:750px}.intro{position:relative;z-index:4;background-image:url("../images/budapest.jpg");background-size:cover;background-position:center}.details__text{text-align:center;font-size:24px}.gellert{position:relative;overflow:hidden}.background-fixed{clip:rect(0, auto, auto, 0);-webkit-clip-path:inset(0 0 0 0);position:absolute;top:0;left:0;width:100%;height:100%;z-index:2}.background-fixed__image{position:fixed;top:0;left:0;right:0;bottom:0;width:100%;height:100%;object-fit:cover;z-index:3}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9hdG9tcy9fbm9ybWFsaXplLnNjc3MiLCJtYWluLmNzcyIsIl9hdG9tcy9fY3Nzd2l6YXJkcnktZ3JpZHMuc2NzcyIsIl9hdG9tcy9fZ3JpZC5zY3NzIiwiX2F0b21zL190eXBvZ3JhcGh5LnNjc3MiLCJfYXRvbXMvX25hdi5zY3NzIiwiX2F0b21zL19tYXAuc2NzcyIsIl9hdG9tcy9fc2VjdGlvbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFBNEUsQUFPNUUsSUFBSSxBQUFDLENBQ0QsV0FBVyxDQUFFLFVBQVcsQ0FDeEIsb0JBQW9CLENBQUUsSUFBSyxDQUMzQix3QkFBd0IsQ0FBRSxJQUFLLENBQ2xDLEFBTUQsSUFBSSxBQUFDLENBQ0QsTUFBTSxDQUFFLENBQUUsQ0FDYixBQVdELE9BQU8sQ0FDUCxLQUFLLENBQ0wsT0FBTyxDQUNQLFVBQVUsQ0FDVixNQUFNLENBQ04sTUFBTSxDQUNOLE1BQU0sQ0FDTixJQUFJLENBQ0osSUFBSSxDQUNKLEdBQUcsQ0FDSCxPQUFPLENBQ1AsT0FBTyxBQUFDLENBQ0osT0FBTyxDQUFFLEtBQU0sQ0FDbEIsQUFNRCxLQUFLLENBQ0wsTUFBTSxDQUNOLFFBQVEsQ0FDUixLQUFLLEFBQUMsQ0FDRixPQUFPLENBQUUsWUFBYSxDQUN6QixBQU1ELEFBQVcsS0FBTixJQUFLLEVBQUEsQUFBQyxRQUFELEVBQVksQ0FDbEIsT0FBTyxDQUFFLElBQUssQ0FDZCxNQUFNLENBQUUsQ0FBRSxDQUNiLEFBTUQsUUFBUSxBQUFDLENBQ0wsY0FBYyxDQUFFLFFBQVMsQ0FDNUIsQUFPRCxRQUFRLEVDVFIsQURVQyxNQUFELENBQVMsQ0FDTCxPQUFPLENBQUUsSUFBSyxDQUNqQixBQVVELENBQUMsQUFBQyxDQUNFLGdCQUFnQixDQUFFLFdBQVksQ0FDOUIsNEJBQTRCLENBQUUsT0FBUSxDQUN6QyxBQU9ELEFBQUMsQ0FBQSxPQUFPLENBQ1IsQUFBQyxDQUFBLE1BQU0sQUFBQyxDQUNKLGFBQWEsQ0FBRSxDQUFF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aEIsQUFFRCxNQUFNLEFBQUMsQ0FDSCxRQUFRLENBQUUsUUFBUyxDQUNuQixPQUFPLENBQUUsQ0FBRSxDQUNYLGdCQUFnQixDQUFFLDZCQUFBLENBQ2xCLGVBQWUsQ0FBRSxLQUFNLENBQ3ZCLG1CQUFtQixDQUFFLE1BQU8sQ0FDL0IsQUFFRCxjQUFRLEFBQ0ksQ0FDSixVQUFVLENBQUUsTUFBTyxDQUNuQixTQUFTLENBQUUsSUFBSyxDQUNuQixBQUdMLFFBQVEsQUFBQyxDQUNMLFFBQVEsQ0FBRSxRQUFTLENBQ25CLFFBQVEsQ0FBRSxNQUFPLENBQ3BCLEFBRUQsaUJBQWlCLEFBQUMsQ0FDZCxJQUFJLENBQUUsc0JBQUEsQ0FDTixpQkFBaUIsQ0FBRSxjQUFBLENBQ25CLFFBQVEsQ0FBRSxRQUFTLENBQ25CLEdBQUcsQ0FBRSxDQUFFLENBQ1AsSUFBSSxDQUFFLENBQUUsQ0FDUixLQUFLLENBQUUsSUFBSyxDQUNaLE1BQU0sQ0FBRSxJQUFLLENBQ2IsT0FBTyxDQUFFLENBQUUsQ0FhZCxBQXJCRCx3QkFBaUIsQUFVSixDQUNMLFFBQVEsQ0FBRSxLQUFNLENBQ2hCLEdBQUcsQ0FBRSxDQUFFLENBQ1AsSUFBSSxDQUFFLENBQUUsQ0FDUixLQUFLLENBQUUsQ0FBRSxDQUNULE1BQU0sQ0FBRSxDQUFFLENBQ1YsS0FBSyxDQUFFLElBQUssQ0FDWixNQUFNLENBQUUsSUFBSyxDQUNiLFVBQVUsQ0FBRSxLQUFNLENBQ2xCLE9BQU8sQ0FBRSxDQUFFLENBQ2QiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICAgIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gICAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgICBmb250LXNpemU6IDc1JTtcbiAgICBsaW5lLWhlaWdodDogMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICAgIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICAgIGhlaWdodDogMDsgLyogMSAqL1xuICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gICAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICAgIG1hcmdpbjogMCAycHg7XG4gICAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMyAqL1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gICAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0OyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJENTU1dJWkFSRFJZLUdSSURTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBDT05URU5UU1xuICogSU5UUk9EVUNUSU9OLi4uLi4uLi4uSG93IHRoZSBncmlkIHN5c3RlbSB3b3Jrcy5cbiAqIFZBUklBQkxFUy4uLi4uLi4uLi4uLllvdXIgc2V0dGluZ3MuXG4gKiBNSVhJTlMuLi4uLi4uLi4uLi4uLi5MaWJyYXJ5IG1peGlucy5cbiAqIEdSSUQgU0VUVVAuLi4uLi4uLi4uLkJ1aWxkIHRoZSBncmlkIHN0cnVjdHVyZS5cbiAqIFdJRFRIUy4uLi4uLi4uLi4uLi4uLkJ1aWxkIG91ciByZXNwb25zaXZlIHdpZHRocyBhcm91bmQgb3VyIGJyZWFrcG9pbnRzLlxuICogUFVTSC4uLi4uLi4uLi4uLi4uLi4uUHVzaCBjbGFzc2VzLlxuICogUFVMTC4uLi4uLi4uLi4uLi4uLi4uUHVsbCBjbGFzc2VzLlxuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJElOVFJPRFVDVElPTlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogY3Nzd2l6YXJkcnkgZ3JpZHMgcHJvdmlkZXMgeW91IHdpdGggd2lkdGhzIHRvIHN1aXQgYSBudW1iZXIgb2YgYnJlYWtwb2ludHNcbiAqIGRlc2lnbmVkIGFyb3VuZCBkZXZpY2VzIG9mIGEgc2l6ZSB5b3Ugc3BlY2lmeS4gT3V0IG9mIHRoZSBib3gsIGNzc3dpemFyZHJ5XG4gKiBncmlkcyBjYXRlcnMgdG8gdGhlIGZvbGxvd2luZyB0eXBlcyBvZiBkZXZpY2U6XG4gKlxuICogcGFsbSAgICAgLS0gIHBhbG0tYmFzZWQgZGV2aWNlcywgbGlrZSBwaG9uZXMgYW5kIHNtYWxsIHRhYmxldHNcbiAqIGxhcCAgICAgIC0tICBsYXAtYmFzZWQgZGV2aWNlcywgbGlrZSBpUGFkcyBvciBsYXB0b3BzXG4gKiBwb3J0YWJsZSAtLSAgYWxsIG9mIHRoZSBhYm92ZVxuICogZGVzayAgICAgLS0gIHN0YXRpb25hcnkgZGV2aWNlcywgbGlrZSBkZXNrdG9wIGNvbXB1dGVyc1xuICogcmVndWxhciAgLS0gIGFueS9hbGwgdHlwZXMgb2YgZGV2aWNlXG4gKlxuICogVGhlc2UgbmFtZXNwYWNlcyBhcmUgdGhlbiB1c2VkIGluIHRoZSBsaWJyYXJ5IHRvIGdpdmUgeW91IHRoZSBhYmlsaXR5IHRvXG4gKiBtYW5pcHVsYXRlIHlvdXIgbGF5b3V0cyBiYXNlZCBhcm91bmQgdGhlbSwgZm9yIGV4YW1wbGU6XG4gKlxuICAgPGRpdiBjbGFzcz1cImdyaWRfX2l0ZW0gIG9uZS13aG9sZSAgbGFwLS1vbmUtaGFsZiAgZGVzay0tb25lLXRoaXJkXCI+XG4gKlxuICogVGhpcyB3b3VsZCBnaXZlIHlvdSBhIGdyaWQgaXRlbSB3aGljaCBpcyAxMDAlIHdpZHRoIHVubGVzcyBpdCBpcyBvbiBhIGxhcFxuICogZGV2aWNlLCBhdCB3aGljaCBwb2ludCBpdCBiZWNvbWUgNTAlIHdpZGUsIG9yIGl0IGlzIG9uIGEgZGVza3RvcCBkZXZpY2UsIGF0XG4gKiB3aGljaCBwb2ludCBpdCBiZWNvbWVzIDMzLjMzMyUgd2lkdGguXG4gKlxuICogY3Nzd2l6YXJkcnkgZ3JpZHMgYWxzbyBoYXMgcHVzaCBhbmQgcHVsbCBjbGFzc2VzIHdoaWNoIGFsbG93IHlvdSB0byBudWRnZVxuICogZ3JpZCBpdGVtcyBsZWZ0IGFuZCByaWdodCBieSBhIGRlZmluZWQgYW1vdW50LiBUaGVzZSBmb2xsb3cgdGhlIHNhbWUgbmFtaW5nXG4gKiBjb252ZW50aW9uIGFzIGFib3ZlLCBidXQgYXJlIHByZXBlbmRlZCBieSBlaXRoZXIgYHB1c2gtLWAgb3IgYHB1bGwtLWAsIGZvclxuICogZXhhbXBsZTpcbiAqXG4gICBgY2xhc3M9XCJncmlkX19pdGVtICBvbmUtaGFsZiAgcHVzaC0tb25lLWhhbGZcImBcbiAqXG4gKiBUaGlzIHdvdWxkIGdpdmUgeW91IGEgZ3JpZCBpdGVtIHdoaWNoIGlzIDUwJSB3aWR0aCBhbmQgcHVzaGVkIG92ZXIgdG8gdGhlXG4gKiByaWdodCBieSA1MCUuXG4gKlxuICogQWxsIGNsYXNzZXMgaW4gY3Nzd2l6YXJkcnkgZ3JpZHMgZm9sbG93IHRoaXMgcGF0dGVuLCBzbyB5b3Ugc2hvdWxkIGZhaXJseVxuICogcXVpY2tseSBiZSBhYmxlIHRvIHBpZWNlIHRvZ2V0aGVyIGFueSBjb21iaW5hdGlvbnMgeW91IGNhbiBpbWFnaW5lLCBmb3JcbiAqIGV4YW1wbGU6XG4gKlxuICAgYGNsYXNzPVwiZ3JpZF9faXRlbSAgb25lLXdob2xlICBsYXAtLW9uZS1oYWxmICBkZXNrLS1vbmUtdGhpcmQgIHB1c2gtLWRlc2stLW9uZS10aGlyZFwiYFxuICpcbiAgIGBjbGFzcz1cImdyaWRfX2l0ZW0gIG9uZS1xdWFydGVyICBwYWxtLS1vbmUtaGFsZiAgcHVzaC0tcGFsbS0tb25lLWhhbGZcImBcbiAqXG4gICBgY2xhc3M9XCJncmlkX19pdGVtICBwYWxtLS1vbmUtdGhpcmQgIGRlc2stLWZpdmUtdHdlbGZ0aHNcImBcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRWQVJJQUJMRVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIElmIHlvdSBhcmUgYnVpbGRpbmcgYSBub24tcmVzcG9uc2l2ZSBzaXRlIGJ1dCB3b3VsZCBzdGlsbCBsaWtlIHRvIHVzZVxuICogY3Nzd2l6YXJkcnktZ3JpZHMsIHNldCB0aGlzIHRvIOKAmGZhbHNl4oCZOlxuICovXG4vKipcbiAqIElzIHRoaXMgYnVpbGQgbW9iaWxlIGZpcnN0PyBTZXR0aW5nIHRvIOKAmHRydWXigJkgbWVhbnMgdGhhdCBhbGwgZ3JpZHMgd2lsbCBiZVxuICogMTAwJSB3aWR0aCBpZiB5b3UgZG8gbm90IGFwcGx5IGEgbW9yZSBzcGVjaWZpYyBjbGFzcyB0byB0aGVtLlxuICovXG4vKipcbiAqIFNldCB0aGUgc3BhY2luZyBiZXR3ZWVuIHlvdXIgZ3JpZCBpdGVtcy5cbiAqL1xuLyoqXG4gKiBXb3VsZCB5b3UgbGlrZSBTYXNz4oCZIHNpbGVudCBjbGFzc2VzLCBvciByZWd1bGFyIENTUyBjbGFzc2VzP1xuICovXG4vKipcbiAqIFdvdWxkIHlvdSBsaWtlIHB1c2ggYW5kIHB1bGwgY2xhc3NlcyBlbmFibGVkP1xuICovXG4vKipcbiAqIFVzaW5nIGBpbmxpbmUtYmxvY2tgIG1lYW5zIHRoYXQgdGhlIGdyaWQgaXRlbXMgbmVlZCB0aGVpciB3aGl0ZXNwYWNlIHJlbW92aW5nXG4gKiBpbiBvcmRlciBmb3IgdGhlbSB0byB3b3JrIGNvcnJlY3RseS4gU2V0IHRoZSBmb2xsb3dpbmcgdG8gdHJ1ZSBpZiB5b3UgYXJlXG4gKiBnb2luZyB0byBhY2hpZXZlIHRoaXMgYnkgbWFudWFsbHkgcmVtb3ZpbmcvY29tbWVudGluZyBvdXQgYW55IHdoaXRlc3BhY2UgaW5cbiAqIHlvdXIgSFRNTCB5b3Vyc2VsZi5cbiAqXG4gKiBTZXR0aW5nIHRoaXMgdG8gZmFsc2UgaW52b2tlcyBhIGhhY2sgd2hpY2ggY2Fubm90IGFsd2F5cyBiZSBndWFyYW50ZWVkLFxuICogcGxlYXNlIHNlZSB0aGUgZm9sbG93aW5nIGZvciBtb3JlIGRldGFpbDpcbiAqXG4gKiBnaXRodWIuY29tL2Nzc3dpemFyZHJ5L2Nzc3dpemFyZHJ5LWdyaWRzL2NvbW1pdC83NDRkNGIyM2M5ZDJiNzdkNjA1YjU5OTFlNTRhMzk3ZGY3MmUwNjg4XG4gKiBnaXRodWIuY29tL2Nzc3dpemFyZHJ5L2ludWl0LmNzcy9pc3N1ZXMvMTcwI2lzc3VlY29tbWVudC0xNDg1OTM3MVxuICovXG4vKipcbiAqIERlZmluZSB5b3VyIGJyZWFrcG9pbnRzLiBUaGUgZmlyc3QgdmFsdWUgaXMgdGhlIHByZWZpeCB0aGF0IHNoYWxsIGJlIHVzZWQgZm9yXG4gKiB5b3VyIGNsYXNzZXMgKGUuZy4gYC5wYWxtLS1vbmUtaGFsZmApLCB0aGUgc2Vjb25kIHZhbHVlIGlzIHRoZSBtZWRpYSBxdWVyeVxuICogdGhhdCB0aGUgYnJlYWtwb2ludCBmaXJlcyBhdC5cbiAqL1xuLyoqXG4gKiBEZWZpbmUgd2hpY2ggbmFtZXNwYWNlZCBicmVha3BvaW50cyB5b3Ugd291bGQgbGlrZSB0byBnZW5lcmF0ZSBmb3IgZWFjaCBvZlxuICogd2lkdGhzLCBwdXNoIGFuZCBwdWxsLiBUaGlzIGlzIGhhbmR5IGlmIHlvdSBvbmx5IG5lZWQgcHVsbCBvbiwgc2F5LCBkZXNrLCBvclxuICogeW91IG9ubHkgbmVlZCBhIG5ldyB3aWR0aCBicmVha3BvaW50IGF0IG1vYmlsZSBzaXplcy4gSXQgYWxsb3dzIHlvdSB0byBvbmx5XG4gKiBjb21waWxlIGFzIG11Y2ggQ1NTIGFzIHlvdSBuZWVkLiBBbGwgYXJlIHR1cm5lZCBvbiBieSBkZWZhdWx0LCBidXQgeW91IGNhblxuICogYWRkIGFuZCByZW1vdmUgYnJlYWtwb2ludHMgYXQgd2lsbC5cbiAqXG4gKiBQdXNoIGFuZCBwdWxsIHNoYWxsIG9ubHkgYmUgdXNlZCBpZiBgJHB1c2hgIGFuZC9vciBgJHB1bGxgIGFuZCBgJHJlc3BvbnNpdmVgXG4gKiBoYXZlIGJlZW4gc2V0IHRvIOKAmHRydWXigJkuXG4gKi9cbi8qKlxuICogWW91IGRvIG5vdCBuZWVkIHRvIGVkaXQgYW55dGhpbmcgZnJvbSB0aGlzIGxpbmUgb253YXJkOyBjc3N3aXphcmRyeS1ncmlkcyBpc1xuICogZ29vZCB0byBnby4gSGFwcHkgZ3JpZGRpbuKAmSFcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRNSVhJTlNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIFRoZXNlIG1peGlucyBhcmUgZm9yIHRoZSBsaWJyYXJ5IHRvIHVzZSBvbmx5LCB5b3Ugc2hvdWxkIG5vdCBuZWVkIHRvIG1vZGlmeVxuICogdGhlbSBhdCBhbGwuXG4gKlxuICogRW5jbG9zZSBhIGJsb2NrIG9mIGNvZGUgd2l0aCBhIG1lZGlhIHF1ZXJ5IGFzIG5hbWVkIGluIGAkYnJlYWtwb2ludHNgLlxuICovXG4vKipcbiAqIERyb3AgcmVsYXRpdmUgcG9zaXRpb25pbmcgaW50byBzaWxlbnQgY2xhc3NlcyB3aGljaCBjYW7igJl0IHRha2UgYWR2YW50YWdlIG9mXG4gKiB0aGUgYFtjbGFzcyo9XCJwdXNoLS1cIl1gIGFuZCBgW2NsYXNzKj1cInB1bGwtLVwiXWAgc2VsZWN0b3JzLlxuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJEdSSUQgU0VUVVBcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIDEuIEFsbG93IHRoZSBncmlkIHN5c3RlbSB0byBiZSB1c2VkIG9uIGxpc3RzLlxuICogMi4gUmVtb3ZlIGFueSBtYXJnaW5zIGFuZCBwYWRkaW5ncyB0aGF0IG1pZ2h0IGFmZmVjdCB0aGUgZ3JpZCBzeXN0ZW0uXG4gKiAzLiBBcHBseSBhIG5lZ2F0aXZlIGBtYXJnaW4tbGVmdGAgdG8gbmVnYXRlIHRoZSBjb2x1bW5z4oCZIGd1dHRlcnMuXG4gKi9cbi5ncmlkIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgLyogWzFdICovXG4gIG1hcmdpbjogMDtcbiAgLyogWzJdICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIFsyXSAqL1xuICBtYXJnaW4tbGVmdDogLTI0cHg7XG4gIC8qIFszXSAqLyB9XG5cbi8qKlxuICogMS4gQ2F1c2UgY29sdW1ucyB0byBzdGFjayBzaWRlLWJ5LXNpZGUuXG4gKiAyLiBTcGFjZSBjb2x1bW5zIGFwYXJ0LlxuICogMy4gQWxpZ24gY29sdW1ucyB0byB0aGUgdG9wcyBvZiBlYWNoIG90aGVyLlxuICogNC4gRnVsbC13aWR0aCB1bmxlc3MgdG9sZCB0byBiZWhhdmUgb3RoZXJ3aXNlLlxuICogNS4gUmVxdWlyZWQgdG8gY29tYmluZSBmbHVpZCB3aWR0aHMgYW5kIGZpeGVkIGd1dHRlcnMuXG4gKi9cbi5ncmlkX19pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiBbMV0gKi9cbiAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAvKiBbMl0gKi9cbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgLyogWzNdICovXG4gIHdpZHRoOiAxMDAlO1xuICAvKiBbNF0gKi9cbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiBbNV0gKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiBbNV0gKi9cbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogWzVdICovIH1cblxuLyoqXG4gKiBSZXZlcnNlZCBncmlkcyBhbGxvdyB5b3UgdG8gc3RydWN0dXJlIHlvdXIgc291cmNlIGluIHRoZSBvcHBvc2l0ZSBvcmRlciB0b1xuICogaG93IHlvdXIgcmVuZGVyZWQgbGF5b3V0IHdpbGwgYXBwZWFyLiBFeHRlbmRzIGAuZ3JpZGAuXG4gKi9cbi5ncmlkLS1yZXYge1xuICBkaXJlY3Rpb246IHJ0bDtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAuZ3JpZC0tcmV2ID4gLmdyaWRfX2l0ZW0ge1xuICAgIGRpcmVjdGlvbjogbHRyO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLyoqXG4gKiBHdXR0ZXJsZXNzIGdyaWRzIGhhdmUgYWxsIHRoZSBwcm9wZXJ0aWVzIG9mIHJlZ3VsYXIgZ3JpZHMsIG1pbnVzIGFueSBzcGFjaW5nLlxuICogRXh0ZW5kcyBgLmdyaWRgLlxuICovXG4uZ3JpZC0tZnVsbCB7XG4gIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5ncmlkLS1mdWxsID4gLmdyaWRfX2l0ZW0ge1xuICAgIHBhZGRpbmctbGVmdDogMDsgfVxuXG4vKipcbiAqIEFsaWduIHRoZSBlbnRpcmUgZ3JpZCB0byB0aGUgcmlnaHQuIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuLmdyaWQtLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLmdyaWQtLXJpZ2h0ID4gLmdyaWRfX2l0ZW0ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLyoqXG4gKiBDZW50ZXJlZCBncmlkcyBhbGlnbiBncmlkIGl0ZW1zIGNlbnRyYWxseSB3aXRob3V0IG5lZWRpbmcgdG8gdXNlIHB1c2ggb3IgcHVsbFxuICogY2xhc3Nlcy4gRXh0ZW5kcyBgLmdyaWRgLlxuICovXG4uZ3JpZC0tY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5ncmlkLS1jZW50ZXIgPiAuZ3JpZF9faXRlbSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4vKipcbiAqIEFsaWduIGdyaWQgY2VsbHMgdmVydGljYWxseSAoYC5ncmlkLS1taWRkbGVgIG9yIGAuZ3JpZC0tYm90dG9tYCkuIEV4dGVuZHNcbiAqIGAuZ3JpZGAuXG4gKi9cbi5ncmlkLS1taWRkbGUgPiAuZ3JpZF9faXRlbSB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLmdyaWQtLWJvdHRvbSA+IC5ncmlkX19pdGVtIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsgfVxuXG4vKipcbiAqIENyZWF0ZSBncmlkcyB3aXRoIG5hcnJvd2VyIGd1dHRlcnMuIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuLmdyaWQtLW5hcnJvdyB7XG4gIG1hcmdpbi1sZWZ0OiAtMTJweDsgfVxuICAuZ3JpZC0tbmFycm93ID4gLmdyaWRfX2l0ZW0ge1xuICAgIHBhZGRpbmctbGVmdDogMTJweDsgfVxuXG4vKipcbiAqIENyZWF0ZSBncmlkcyB3aXRoIHdpZGVyIGd1dHRlcnMuIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuLmdyaWQtLXdpZGUge1xuICBtYXJnaW4tbGVmdDogLTQ4cHg7IH1cbiAgLmdyaWQtLXdpZGUgPiAuZ3JpZF9faXRlbSB7XG4gICAgcGFkZGluZy1sZWZ0OiA0OHB4OyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICAkV0lEVEhTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBDcmVhdGUgb3VyIHdpZHRoIGNsYXNzZXMsIHByZWZpeGVkIGJ5IHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlLlxuICovXG4vKipcbiAqIE91ciByZWd1bGFyLCBub24tcmVzcG9uc2l2ZSB3aWR0aCBjbGFzc2VzLlxuICovXG4vKipcbiAgICAgKiBXaG9sZVxuICAgICAqL1xuLm9uZS13aG9sZSB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qKlxuICAgICAqIEhhbHZlc1xuICAgICAqL1xuLm9uZS1oYWxmLCAudHdvLXF1YXJ0ZXJzLCAudGhyZWUtc2l4dGhzLCAuZm91ci1laWdodGhzLCAuZml2ZS10ZW50aHMsIC5zaXgtdHdlbGZ0aHMge1xuICB3aWR0aDogNTAlOyB9XG5cbi8qKlxuICAgICAqIFRoaXJkc1xuICAgICAqL1xuLm9uZS10aGlyZCwgLnR3by1zaXh0aHMsIC5mb3VyLXR3ZWxmdGhzIHtcbiAgd2lkdGg6IDMzLjMzMyU7IH1cblxuLnR3by10aGlyZHMsIC5mb3VyLXNpeHRocywgLmVpZ2h0LXR3ZWxmdGhzIHtcbiAgd2lkdGg6IDY2LjY2NiU7IH1cblxuLyoqXG4gICAgICogUXVhcnRlcnNcbiAgICAgKi9cbi5vbmUtcXVhcnRlciwgLnR3by1laWdodGhzLCAudGhyZWUtdHdlbGZ0aHMge1xuICB3aWR0aDogMjUlOyB9XG5cbi50aHJlZS1xdWFydGVycywgLnNpeC1laWdodGhzLCAubmluZS10d2VsZnRocyB7XG4gIHdpZHRoOiA3NSU7IH1cblxuLyoqXG4gICAgICogRmlmdGhzXG4gICAgICovXG4ub25lLWZpZnRoLCAudHdvLXRlbnRocyB7XG4gIHdpZHRoOiAyMCU7IH1cblxuLnR3by1maWZ0aHMsIC5mb3VyLXRlbnRocyB7XG4gIHdpZHRoOiA0MCU7IH1cblxuLnRocmVlLWZpZnRocywgLnNpeC10ZW50aHMge1xuICB3aWR0aDogNjAlOyB9XG5cbi5mb3VyLWZpZnRocywgLmVpZ2h0LXRlbnRocyB7XG4gIHdpZHRoOiA4MCU7IH1cblxuLyoqXG4gICAgICogU2l4dGhzXG4gICAgICovXG4ub25lLXNpeHRoLCAudHdvLXR3ZWxmdGhzIHtcbiAgd2lkdGg6IDE2LjY2NiU7IH1cblxuLmZpdmUtc2l4dGhzLCAudGVuLXR3ZWxmdGhzIHtcbiAgd2lkdGg6IDgzLjMzMyU7IH1cblxuLyoqXG4gICAgICogRWlnaHRoc1xuICAgICAqL1xuLm9uZS1laWdodGgge1xuICB3aWR0aDogMTIuNSU7IH1cblxuLnRocmVlLWVpZ2h0aHMge1xuICB3aWR0aDogMzcuNSU7IH1cblxuLmZpdmUtZWlnaHRocyB7XG4gIHdpZHRoOiA2Mi41JTsgfVxuXG4uc2V2ZW4tZWlnaHRocyB7XG4gIHdpZHRoOiA4Ny41JTsgfVxuXG4vKipcbiAgICAgKiBUZW50aHNcbiAgICAgKi9cbi5vbmUtdGVudGgge1xuICB3aWR0aDogMTAlOyB9XG5cbi50aHJlZS10ZW50aHMge1xuICB3aWR0aDogMzAlOyB9XG5cbi5zZXZlbi10ZW50aHMge1xuICB3aWR0aDogNzAlOyB9XG5cbi5uaW5lLXRlbnRocyB7XG4gIHdpZHRoOiA5MCU7IH1cblxuLyoqXG4gICAgICogVHdlbGZ0aHNcbiAgICAgKi9cbi5vbmUtdHdlbGZ0aCB7XG4gIHdpZHRoOiA4LjMzMyU7IH1cblxuLmZpdmUtdHdlbGZ0aHMge1xuICB3aWR0aDogNDEuNjY2JTsgfVxuXG4uc2V2ZW4tdHdlbGZ0aHMge1xuICB3aWR0aDogNTguMzMzJTsgfVxuXG4uZWxldmVuLXR3ZWxmdGhzIHtcbiAgd2lkdGg6IDkxLjY2NiU7IH1cblxuLyoqXG4gKiBPdXIgcmVzcG9uc2l2ZSBjbGFzc2VzLCBpZiB3ZSBoYXZlIGVuYWJsZWQgdGhlbS5cbiAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAvKipcbiAgICAgKiBXaG9sZVxuICAgICAqL1xuICAucGFsbS0tb25lLXdob2xlIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAvKipcbiAgICAgKiBIYWx2ZXNcbiAgICAgKi9cbiAgLnBhbG0tLW9uZS1oYWxmLCAucGFsbS0tdHdvLXF1YXJ0ZXJzLCAucGFsbS0tdGhyZWUtc2l4dGhzLCAucGFsbS0tZm91ci1laWdodGhzLCAucGFsbS0tZml2ZS10ZW50aHMsIC5wYWxtLS1zaXgtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgLyoqXG4gICAgICogVGhpcmRzXG4gICAgICovXG4gIC5wYWxtLS1vbmUtdGhpcmQsIC5wYWxtLS10d28tc2l4dGhzLCAucGFsbS0tZm91ci10d2VsZnRocyB7XG4gICAgd2lkdGg6IDMzLjMzMyU7IH1cbiAgLnBhbG0tLXR3by10aGlyZHMsIC5wYWxtLS1mb3VyLXNpeHRocywgLnBhbG0tLWVpZ2h0LXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNjYuNjY2JTsgfVxuICAvKipcbiAgICAgKiBRdWFydGVyc1xuICAgICAqL1xuICAucGFsbS0tb25lLXF1YXJ0ZXIsIC5wYWxtLS10d28tZWlnaHRocywgLnBhbG0tLXRocmVlLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5wYWxtLS10aHJlZS1xdWFydGVycywgLnBhbG0tLXNpeC1laWdodGhzLCAucGFsbS0tbmluZS10d2VsZnRocyB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAvKipcbiAgICAgKiBGaWZ0aHNcbiAgICAgKi9cbiAgLnBhbG0tLW9uZS1maWZ0aCwgLnBhbG0tLXR3by10ZW50aHMge1xuICAgIHdpZHRoOiAyMCU7IH1cbiAgLnBhbG0tLXR3by1maWZ0aHMsIC5wYWxtLS1mb3VyLXRlbnRocyB7XG4gICAgd2lkdGg6IDQwJTsgfVxuICAucGFsbS0tdGhyZWUtZmlmdGhzLCAucGFsbS0tc2l4LXRlbnRocyB7XG4gICAgd2lkdGg6IDYwJTsgfVxuICAucGFsbS0tZm91ci1maWZ0aHMsIC5wYWxtLS1laWdodC10ZW50aHMge1xuICAgIHdpZHRoOiA4MCU7IH1cbiAgLyoqXG4gICAgICogU2l4dGhzXG4gICAgICovXG4gIC5wYWxtLS1vbmUtc2l4dGgsIC5wYWxtLS10d28tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAxNi42NjYlOyB9XG4gIC5wYWxtLS1maXZlLXNpeHRocywgLnBhbG0tLXRlbi10d2VsZnRocyB7XG4gICAgd2lkdGg6IDgzLjMzMyU7IH1cbiAgLyoqXG4gICAgICogRWlnaHRoc1xuICAgICAqL1xuICAucGFsbS0tb25lLWVpZ2h0aCB7XG4gICAgd2lkdGg6IDEyLjUlOyB9XG4gIC5wYWxtLS10aHJlZS1laWdodGhzIHtcbiAgICB3aWR0aDogMzcuNSU7IH1cbiAgLnBhbG0tLWZpdmUtZWlnaHRocyB7XG4gICAgd2lkdGg6IDYyLjUlOyB9XG4gIC5wYWxtLS1zZXZlbi1laWdodGhzIHtcbiAgICB3aWR0aDogODcuNSU7IH1cbiAgLyoqXG4gICAgICogVGVudGhzXG4gICAgICovXG4gIC5wYWxtLS1vbmUtdGVudGgge1xuICAgIHdpZHRoOiAxMCU7IH1cbiAgLnBhbG0tLXRocmVlLXRlbnRocyB7XG4gICAgd2lkdGg6IDMwJTsgfVxuICAucGFsbS0tc2V2ZW4tdGVudGhzIHtcbiAgICB3aWR0aDogNzAlOyB9XG4gIC5wYWxtLS1uaW5lLXRlbnRocyB7XG4gICAgd2lkdGg6IDkwJTsgfVxuICAvKipcbiAgICAgKiBUd2VsZnRoc1xuICAgICAqL1xuICAucGFsbS0tb25lLXR3ZWxmdGgge1xuICAgIHdpZHRoOiA4LjMzMyU7IH1cbiAgLnBhbG0tLWZpdmUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA0MS42NjYlOyB9XG4gIC5wYWxtLS1zZXZlbi10d2VsZnRocyB7XG4gICAgd2lkdGg6IDU4LjMzMyU7IH1cbiAgLnBhbG0tLWVsZXZlbi10d2VsZnRocyB7XG4gICAgd2lkdGg6IDkxLjY2NiU7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC8qKlxuICAgICAqIFdob2xlXG4gICAgICovXG4gIC5sYXAtLW9uZS13aG9sZSB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLyoqXG4gICAgICogSGFsdmVzXG4gICAgICovXG4gIC5sYXAtLW9uZS1oYWxmLCAubGFwLS10d28tcXVhcnRlcnMsIC5sYXAtLXRocmVlLXNpeHRocywgLmxhcC0tZm91ci1laWdodGhzLCAubGFwLS1maXZlLXRlbnRocywgLmxhcC0tc2l4LXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC8qKlxuICAgICAqIFRoaXJkc1xuICAgICAqL1xuICAubGFwLS1vbmUtdGhpcmQsIC5sYXAtLXR3by1zaXh0aHMsIC5sYXAtLWZvdXItdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAzMy4zMzMlOyB9XG4gIC5sYXAtLXR3by10aGlyZHMsIC5sYXAtLWZvdXItc2l4dGhzLCAubGFwLS1laWdodC10d2VsZnRocyB7XG4gICAgd2lkdGg6IDY2LjY2NiU7IH1cbiAgLyoqXG4gICAgICogUXVhcnRlcnNcbiAgICAgKi9cbiAgLmxhcC0tb25lLXF1YXJ0ZXIsIC5sYXAtLXR3by1laWdodGhzLCAubGFwLS10aHJlZS10d2VsZnRocyB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAubGFwLS10aHJlZS1xdWFydGVycywgLmxhcC0tc2l4LWVpZ2h0aHMsIC5sYXAtLW5pbmUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA3NSU7IH1cbiAgLyoqXG4gICAgICogRmlmdGhzXG4gICAgICovXG4gIC5sYXAtLW9uZS1maWZ0aCwgLmxhcC0tdHdvLXRlbnRocyB7XG4gICAgd2lkdGg6IDIwJTsgfVxuICAubGFwLS10d28tZmlmdGhzLCAubGFwLS1mb3VyLXRlbnRocyB7XG4gICAgd2lkdGg6IDQwJTsgfVxuICAubGFwLS10aHJlZS1maWZ0aHMsIC5sYXAtLXNpeC10ZW50aHMge1xuICAgIHdpZHRoOiA2MCU7IH1cbiAgLmxhcC0tZm91ci1maWZ0aHMsIC5sYXAtLWVpZ2h0LXRlbnRocyB7XG4gICAgd2lkdGg6IDgwJTsgfVxuICAvKipcbiAgICAgKiBTaXh0aHNcbiAgICAgKi9cbiAgLmxhcC0tb25lLXNpeHRoLCAubGFwLS10d28tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAxNi42NjYlOyB9XG4gIC5sYXAtLWZpdmUtc2l4dGhzLCAubGFwLS10ZW4tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA4My4zMzMlOyB9XG4gIC8qKlxuICAgICAqIEVpZ2h0aHNcbiAgICAgKi9cbiAgLmxhcC0tb25lLWVpZ2h0aCB7XG4gICAgd2lkdGg6IDEyLjUlOyB9XG4gIC5sYXAtLXRocmVlLWVpZ2h0aHMge1xuICAgIHdpZHRoOiAzNy41JTsgfVxuICAubGFwLS1maXZlLWVpZ2h0aHMge1xuICAgIHdpZHRoOiA2Mi41JTsgfVxuICAubGFwLS1zZXZlbi1laWdodGhzIHtcbiAgICB3aWR0aDogODcuNSU7IH1cbiAgLyoqXG4gICAgICogVGVudGhzXG4gICAgICovXG4gIC5sYXAtLW9uZS10ZW50aCB7XG4gICAgd2lkdGg6IDEwJTsgfVxuICAubGFwLS10aHJlZS10ZW50aHMge1xuICAgIHdpZHRoOiAzMCU7IH1cbiAgLmxhcC0tc2V2ZW4tdGVudGhzIHtcbiAgICB3aWR0aDogNzAlOyB9XG4gIC5sYXAtLW5pbmUtdGVudGhzIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC8qKlxuICAgICAqIFR3ZWxmdGhzXG4gICAgICovXG4gIC5sYXAtLW9uZS10d2VsZnRoIHtcbiAgICB3aWR0aDogOC4zMzMlOyB9XG4gIC5sYXAtLWZpdmUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA0MS42NjYlOyB9XG4gIC5sYXAtLXNldmVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNTguMzMzJTsgfVxuICAubGFwLS1lbGV2ZW4tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA5MS42NjYlOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLyoqXG4gICAgICogV2hvbGVcbiAgICAgKi9cbiAgLnBvcnRhYmxlLS1vbmUtd2hvbGUge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC8qKlxuICAgICAqIEhhbHZlc1xuICAgICAqL1xuICAucG9ydGFibGUtLW9uZS1oYWxmLCAucG9ydGFibGUtLXR3by1xdWFydGVycywgLnBvcnRhYmxlLS10aHJlZS1zaXh0aHMsIC5wb3J0YWJsZS0tZm91ci1laWdodGhzLCAucG9ydGFibGUtLWZpdmUtdGVudGhzLCAucG9ydGFibGUtLXNpeC10d2VsZnRocyB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAvKipcbiAgICAgKiBUaGlyZHNcbiAgICAgKi9cbiAgLnBvcnRhYmxlLS1vbmUtdGhpcmQsIC5wb3J0YWJsZS0tdHdvLXNpeHRocywgLnBvcnRhYmxlLS1mb3VyLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogMzMuMzMzJTsgfVxuICAucG9ydGFibGUtLXR3by10aGlyZHMsIC5wb3J0YWJsZS0tZm91ci1zaXh0aHMsIC5wb3J0YWJsZS0tZWlnaHQtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA2Ni42NjYlOyB9XG4gIC8qKlxuICAgICAqIFF1YXJ0ZXJzXG4gICAgICovXG4gIC5wb3J0YWJsZS0tb25lLXF1YXJ0ZXIsIC5wb3J0YWJsZS0tdHdvLWVpZ2h0aHMsIC5wb3J0YWJsZS0tdGhyZWUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLnBvcnRhYmxlLS10aHJlZS1xdWFydGVycywgLnBvcnRhYmxlLS1zaXgtZWlnaHRocywgLnBvcnRhYmxlLS1uaW5lLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC8qKlxuICAgICAqIEZpZnRoc1xuICAgICAqL1xuICAucG9ydGFibGUtLW9uZS1maWZ0aCwgLnBvcnRhYmxlLS10d28tdGVudGhzIHtcbiAgICB3aWR0aDogMjAlOyB9XG4gIC5wb3J0YWJsZS0tdHdvLWZpZnRocywgLnBvcnRhYmxlLS1mb3VyLXRlbnRocyB7XG4gICAgd2lkdGg6IDQwJTsgfVxuICAucG9ydGFibGUtLXRocmVlLWZpZnRocywgLnBvcnRhYmxlLS1zaXgtdGVudGhzIHtcbiAgICB3aWR0aDogNjAlOyB9XG4gIC5wb3J0YWJsZS0tZm91ci1maWZ0aHMsIC5wb3J0YWJsZS0tZWlnaHQtdGVudGhzIHtcbiAgICB3aWR0aDogODAlOyB9XG4gIC8qKlxuICAgICAqIFNpeHRoc1xuICAgICAqL1xuICAucG9ydGFibGUtLW9uZS1zaXh0aCwgLnBvcnRhYmxlLS10d28tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAxNi42NjYlOyB9XG4gIC5wb3J0YWJsZS0tZml2ZS1zaXh0aHMsIC5wb3J0YWJsZS0tdGVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogODMuMzMzJTsgfVxuICAvKipcbiAgICAgKiBFaWdodGhzXG4gICAgICovXG4gIC5wb3J0YWJsZS0tb25lLWVpZ2h0aCB7XG4gICAgd2lkdGg6IDEyLjUlOyB9XG4gIC5wb3J0YWJsZS0tdGhyZWUtZWlnaHRocyB7XG4gICAgd2lkdGg6IDM3LjUlOyB9XG4gIC5wb3J0YWJsZS0tZml2ZS1laWdodGhzIHtcbiAgICB3aWR0aDogNjIuNSU7IH1cbiAgLnBvcnRhYmxlLS1zZXZlbi1laWdodGhzIHtcbiAgICB3aWR0aDogODcuNSU7IH1cbiAgLyoqXG4gICAgICogVGVudGhzXG4gICAgICovXG4gIC5wb3J0YWJsZS0tb25lLXRlbnRoIHtcbiAgICB3aWR0aDogMTAlOyB9XG4gIC5wb3J0YWJsZS0tdGhyZWUtdGVudGhzIHtcbiAgICB3aWR0aDogMzAlOyB9XG4gIC5wb3J0YWJsZS0tc2V2ZW4tdGVudGhzIHtcbiAgICB3aWR0aDogNzAlOyB9XG4gIC5wb3J0YWJsZS0tbmluZS10ZW50aHMge1xuICAgIHdpZHRoOiA5MCU7IH1cbiAgLyoqXG4gICAgICogVHdlbGZ0aHNcbiAgICAgKi9cbiAgLnBvcnRhYmxlLS1vbmUtdHdlbGZ0aCB7XG4gICAgd2lkdGg6IDguMzMzJTsgfVxuICAucG9ydGFibGUtLWZpdmUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA0MS42NjYlOyB9XG4gIC5wb3J0YWJsZS0tc2V2ZW4tdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA1OC4zMzMlOyB9XG4gIC5wb3J0YWJsZS0tZWxldmVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogOTEuNjY2JTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC8qKlxuICAgICAqIFdob2xlXG4gICAgICovXG4gIC5kZXNrLS1vbmUtd2hvbGUge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC8qKlxuICAgICAqIEhhbHZlc1xuICAgICAqL1xuICAuZGVzay0tb25lLWhhbGYsIC5kZXNrLS10d28tcXVhcnRlcnMsIC5kZXNrLS10aHJlZS1zaXh0aHMsIC5kZXNrLS1mb3VyLWVpZ2h0aHMsIC5kZXNrLS1maXZlLXRlbnRocywgLmRlc2stLXNpeC10d2VsZnRocyB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAvKipcbiAgICAgKiBUaGlyZHNcbiAgICAgKi9cbiAgLmRlc2stLW9uZS10aGlyZCwgLmRlc2stLXR3by1zaXh0aHMsIC5kZXNrLS1mb3VyLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogMzMuMzMzJTsgfVxuICAuZGVzay0tdHdvLXRoaXJkcywgLmRlc2stLWZvdXItc2l4dGhzLCAuZGVzay0tZWlnaHQtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiA2Ni42NjYlOyB9XG4gIC8qKlxuICAgICAqIFF1YXJ0ZXJzXG4gICAgICovXG4gIC5kZXNrLS1vbmUtcXVhcnRlciwgLmRlc2stLXR3by1laWdodGhzLCAuZGVzay0tdGhyZWUtdHdlbGZ0aHMge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLmRlc2stLXRocmVlLXF1YXJ0ZXJzLCAuZGVzay0tc2l4LWVpZ2h0aHMsIC5kZXNrLS1uaW5lLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC8qKlxuICAgICAqIEZpZnRoc1xuICAgICAqL1xuICAuZGVzay0tb25lLWZpZnRoLCAuZGVzay0tdHdvLXRlbnRocyB7XG4gICAgd2lkdGg6IDIwJTsgfVxuICAuZGVzay0tdHdvLWZpZnRocywgLmRlc2stLWZvdXItdGVudGhzIHtcbiAgICB3aWR0aDogNDAlOyB9XG4gIC5kZXNrLS10aHJlZS1maWZ0aHMsIC5kZXNrLS1zaXgtdGVudGhzIHtcbiAgICB3aWR0aDogNjAlOyB9XG4gIC5kZXNrLS1mb3VyLWZpZnRocywgLmRlc2stLWVpZ2h0LXRlbnRocyB7XG4gICAgd2lkdGg6IDgwJTsgfVxuICAvKipcbiAgICAgKiBTaXh0aHNcbiAgICAgKi9cbiAgLmRlc2stLW9uZS1zaXh0aCwgLmRlc2stLXR3by10d2VsZnRocyB7XG4gICAgd2lkdGg6IDE2LjY2NiU7IH1cbiAgLmRlc2stLWZpdmUtc2l4dGhzLCAuZGVzay0tdGVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogODMuMzMzJTsgfVxuICAvKipcbiAgICAgKiBFaWdodGhzXG4gICAgICovXG4gIC5kZXNrLS1vbmUtZWlnaHRoIHtcbiAgICB3aWR0aDogMTIuNSU7IH1cbiAgLmRlc2stLXRocmVlLWVpZ2h0aHMge1xuICAgIHdpZHRoOiAzNy41JTsgfVxuICAuZGVzay0tZml2ZS1laWdodGhzIHtcbiAgICB3aWR0aDogNjIuNSU7IH1cbiAgLmRlc2stLXNldmVuLWVpZ2h0aHMge1xuICAgIHdpZHRoOiA4Ny41JTsgfVxuICAvKipcbiAgICAgKiBUZW50aHNcbiAgICAgKi9cbiAgLmRlc2stLW9uZS10ZW50aCB7XG4gICAgd2lkdGg6IDEwJTsgfVxuICAuZGVzay0tdGhyZWUtdGVudGhzIHtcbiAgICB3aWR0aDogMzAlOyB9XG4gIC5kZXNrLS1zZXZlbi10ZW50aHMge1xuICAgIHdpZHRoOiA3MCU7IH1cbiAgLmRlc2stLW5pbmUtdGVudGhzIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC8qKlxuICAgICAqIFR3ZWxmdGhzXG4gICAgICovXG4gIC5kZXNrLS1vbmUtdHdlbGZ0aCB7XG4gICAgd2lkdGg6IDguMzMzJTsgfVxuICAuZGVzay0tZml2ZS10d2VsZnRocyB7XG4gICAgd2lkdGg6IDQxLjY2NiU7IH1cbiAgLmRlc2stLXNldmVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogNTguMzMzJTsgfVxuICAuZGVzay0tZWxldmVuLXR3ZWxmdGhzIHtcbiAgICB3aWR0aDogOTEuNjY2JTsgfSB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICAkUFVTSFxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogUHVzaCBjbGFzc2VzLCB0byBtb3ZlIGdyaWQgaXRlbXMgb3ZlciB0byB0aGUgcmlnaHQgYnkgY2VydGFpbiBhbW91bnRzLlxuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJFBVTExcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIFB1bGwgY2xhc3NlcywgdG8gbW92ZSBncmlkIGl0ZW1zIGJhY2sgdG8gdGhlIGxlZnQgYnkgY2VydGFpbiBhbW91bnRzLlxuICovXG4uZ3JpZF9fY29udGFpbmVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMjRweDtcbiAgbWF4LXdpZHRoOiA2MjBweDsgfVxuXG5odG1sIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgU2FucyBQcm8nLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS43OyB9XG5cbi5uYXYtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IH1cblxuLm5hdiB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuICAubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiB0YWJsZS1yb3c7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5uYXZfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7IH1cbiAgICAubmF2X19pdGVtIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnR3JlYXQgVmliZXMnLCBjdXJzaXZlO1xuICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgcGFkZGluZzogMjBweCAzMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE7IH1cbiAgICAgIC5uYXZfX2l0ZW0gYTpob3ZlciB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbi5zZWN0aW9uX19tYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDQ7IH1cblxuLnNlY3Rpb25fX21hcCxcbi5tYXAge1xuICBoZWlnaHQ6IDUwdmg7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5tYXAge1xuICBib3JkZXI6IDA7IH1cblxuLnNlY3Rpb24ge1xuICBoZWlnaHQ6IDEwMHZoOyB9XG4gIC5zZWN0aW9uX19oYWxmIHtcbiAgICBoZWlnaHQ6IDUwdmg7IH1cbiAgLnNlY3Rpb25fX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiA0O1xuICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gIC5zZWN0aW9uX190aXRsZSB7XG4gICAgZm9udC1mYW1pbHk6ICdHcmVhdCBWaWJlcycsIGN1cnNpdmU7XG4gICAgZm9udC1zaXplOiA3MnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5sb2dvIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTsgfVxuXG4ubG9nby1uYW1lcyB7XG4gIGZpbGw6ICNmZmY7XG4gIHdpZHRoOiA3NTBweDsgfVxuXG4uaW50cm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDQ7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9idWRhcGVzdC5qcGdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsgfVxuXG4uZGV0YWlsc19fdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyNHB4OyB9XG5cbi5nZWxsZXJ0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5iYWNrZ3JvdW5kLWZpeGVkIHtcbiAgY2xpcDogcmVjdCgwLCBhdXRvLCBhdXRvLCAwKTtcbiAgLXdlYmtpdC1jbGlwLXBhdGg6IGluc2V0KDAgMCAwIDApO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMjsgfVxuICAuYmFja2dyb3VuZC1maXhlZF9faW1hZ2Uge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHotaW5kZXg6IDM7IH1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJENTU1dJWkFSRFJZLUdSSURTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBDT05URU5UU1xuICogSU5UUk9EVUNUSU9OLi4uLi4uLi4uSG93IHRoZSBncmlkIHN5c3RlbSB3b3Jrcy5cbiAqIFZBUklBQkxFUy4uLi4uLi4uLi4uLllvdXIgc2V0dGluZ3MuXG4gKiBNSVhJTlMuLi4uLi4uLi4uLi4uLi5MaWJyYXJ5IG1peGlucy5cbiAqIEdSSUQgU0VUVVAuLi4uLi4uLi4uLkJ1aWxkIHRoZSBncmlkIHN0cnVjdHVyZS5cbiAqIFdJRFRIUy4uLi4uLi4uLi4uLi4uLkJ1aWxkIG91ciByZXNwb25zaXZlIHdpZHRocyBhcm91bmQgb3VyIGJyZWFrcG9pbnRzLlxuICogUFVTSC4uLi4uLi4uLi4uLi4uLi4uUHVzaCBjbGFzc2VzLlxuICogUFVMTC4uLi4uLi4uLi4uLi4uLi4uUHVsbCBjbGFzc2VzLlxuICovXG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkSU5UUk9EVUNUSU9OXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBjc3N3aXphcmRyeSBncmlkcyBwcm92aWRlcyB5b3Ugd2l0aCB3aWR0aHMgdG8gc3VpdCBhIG51bWJlciBvZiBicmVha3BvaW50c1xuICogZGVzaWduZWQgYXJvdW5kIGRldmljZXMgb2YgYSBzaXplIHlvdSBzcGVjaWZ5LiBPdXQgb2YgdGhlIGJveCwgY3Nzd2l6YXJkcnlcbiAqIGdyaWRzIGNhdGVycyB0byB0aGUgZm9sbG93aW5nIHR5cGVzIG9mIGRldmljZTpcbiAqXG4gKiBwYWxtICAgICAtLSAgcGFsbS1iYXNlZCBkZXZpY2VzLCBsaWtlIHBob25lcyBhbmQgc21hbGwgdGFibGV0c1xuICogbGFwICAgICAgLS0gIGxhcC1iYXNlZCBkZXZpY2VzLCBsaWtlIGlQYWRzIG9yIGxhcHRvcHNcbiAqIHBvcnRhYmxlIC0tICBhbGwgb2YgdGhlIGFib3ZlXG4gKiBkZXNrICAgICAtLSAgc3RhdGlvbmFyeSBkZXZpY2VzLCBsaWtlIGRlc2t0b3AgY29tcHV0ZXJzXG4gKiByZWd1bGFyICAtLSAgYW55L2FsbCB0eXBlcyBvZiBkZXZpY2VcbiAqXG4gKiBUaGVzZSBuYW1lc3BhY2VzIGFyZSB0aGVuIHVzZWQgaW4gdGhlIGxpYnJhcnkgdG8gZ2l2ZSB5b3UgdGhlIGFiaWxpdHkgdG9cbiAqIG1hbmlwdWxhdGUgeW91ciBsYXlvdXRzIGJhc2VkIGFyb3VuZCB0aGVtLCBmb3IgZXhhbXBsZTpcbiAqXG4gICA8ZGl2IGNsYXNzPVwiZ3JpZF9faXRlbSAgb25lLXdob2xlICBsYXAtLW9uZS1oYWxmICBkZXNrLS1vbmUtdGhpcmRcIj5cbiAqXG4gKiBUaGlzIHdvdWxkIGdpdmUgeW91IGEgZ3JpZCBpdGVtIHdoaWNoIGlzIDEwMCUgd2lkdGggdW5sZXNzIGl0IGlzIG9uIGEgbGFwXG4gKiBkZXZpY2UsIGF0IHdoaWNoIHBvaW50IGl0IGJlY29tZSA1MCUgd2lkZSwgb3IgaXQgaXMgb24gYSBkZXNrdG9wIGRldmljZSwgYXRcbiAqIHdoaWNoIHBvaW50IGl0IGJlY29tZXMgMzMuMzMzJSB3aWR0aC5cbiAqXG4gKiBjc3N3aXphcmRyeSBncmlkcyBhbHNvIGhhcyBwdXNoIGFuZCBwdWxsIGNsYXNzZXMgd2hpY2ggYWxsb3cgeW91IHRvIG51ZGdlXG4gKiBncmlkIGl0ZW1zIGxlZnQgYW5kIHJpZ2h0IGJ5IGEgZGVmaW5lZCBhbW91bnQuIFRoZXNlIGZvbGxvdyB0aGUgc2FtZSBuYW1pbmdcbiAqIGNvbnZlbnRpb24gYXMgYWJvdmUsIGJ1dCBhcmUgcHJlcGVuZGVkIGJ5IGVpdGhlciBgcHVzaC0tYCBvciBgcHVsbC0tYCwgZm9yXG4gKiBleGFtcGxlOlxuICpcbiAgIGBjbGFzcz1cImdyaWRfX2l0ZW0gIG9uZS1oYWxmICBwdXNoLS1vbmUtaGFsZlwiYFxuICpcbiAqIFRoaXMgd291bGQgZ2l2ZSB5b3UgYSBncmlkIGl0ZW0gd2hpY2ggaXMgNTAlIHdpZHRoIGFuZCBwdXNoZWQgb3ZlciB0byB0aGVcbiAqIHJpZ2h0IGJ5IDUwJS5cbiAqXG4gKiBBbGwgY2xhc3NlcyBpbiBjc3N3aXphcmRyeSBncmlkcyBmb2xsb3cgdGhpcyBwYXR0ZW4sIHNvIHlvdSBzaG91bGQgZmFpcmx5XG4gKiBxdWlja2x5IGJlIGFibGUgdG8gcGllY2UgdG9nZXRoZXIgYW55IGNvbWJpbmF0aW9ucyB5b3UgY2FuIGltYWdpbmUsIGZvclxuICogZXhhbXBsZTpcbiAqXG4gICBgY2xhc3M9XCJncmlkX19pdGVtICBvbmUtd2hvbGUgIGxhcC0tb25lLWhhbGYgIGRlc2stLW9uZS10aGlyZCAgcHVzaC0tZGVzay0tb25lLXRoaXJkXCJgXG4gKlxuICAgYGNsYXNzPVwiZ3JpZF9faXRlbSAgb25lLXF1YXJ0ZXIgIHBhbG0tLW9uZS1oYWxmICBwdXNoLS1wYWxtLS1vbmUtaGFsZlwiYFxuICpcbiAgIGBjbGFzcz1cImdyaWRfX2l0ZW0gIHBhbG0tLW9uZS10aGlyZCAgZGVzay0tZml2ZS10d2VsZnRoc1wiYFxuICovXG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkVkFSSUFCTEVTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBJZiB5b3UgYXJlIGJ1aWxkaW5nIGEgbm9uLXJlc3BvbnNpdmUgc2l0ZSBidXQgd291bGQgc3RpbGwgbGlrZSB0byB1c2VcbiAqIGNzc3dpemFyZHJ5LWdyaWRzLCBzZXQgdGhpcyB0byDigJhmYWxzZeKAmTpcbiAqL1xuJHJlc3BvbnNpdmU6ICAgICAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcblxuXG4vKipcbiAqIElzIHRoaXMgYnVpbGQgbW9iaWxlIGZpcnN0PyBTZXR0aW5nIHRvIOKAmHRydWXigJkgbWVhbnMgdGhhdCBhbGwgZ3JpZHMgd2lsbCBiZVxuICogMTAwJSB3aWR0aCBpZiB5b3UgZG8gbm90IGFwcGx5IGEgbW9yZSBzcGVjaWZpYyBjbGFzcyB0byB0aGVtLlxuICovXG4kbW9iaWxlLWZpcnN0OiAgICAgICAgICB0cnVlICFkZWZhdWx0O1xuXG5cbi8qKlxuICogU2V0IHRoZSBzcGFjaW5nIGJldHdlZW4geW91ciBncmlkIGl0ZW1zLlxuICovXG4kZ3V0dGVyOiAgICAgICAgICAgICAgICAyNHB4ICFkZWZhdWx0O1xuXG5cbi8qKlxuICogV291bGQgeW91IGxpa2UgU2Fzc+KAmSBzaWxlbnQgY2xhc3Nlcywgb3IgcmVndWxhciBDU1MgY2xhc3Nlcz9cbiAqL1xuJHVzZS1zaWxlbnQtY2xhc3NlczogICAgZmFsc2UgIWRlZmF1bHQ7XG5cblxuLyoqXG4gKiBXb3VsZCB5b3UgbGlrZSBwdXNoIGFuZCBwdWxsIGNsYXNzZXMgZW5hYmxlZD9cbiAqL1xuJHB1c2g6ICAgICAgICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kcHVsbDogICAgICAgICAgICAgICAgICBmYWxzZSAhZGVmYXVsdDtcblxuXG4vKipcbiAqIFVzaW5nIGBpbmxpbmUtYmxvY2tgIG1lYW5zIHRoYXQgdGhlIGdyaWQgaXRlbXMgbmVlZCB0aGVpciB3aGl0ZXNwYWNlIHJlbW92aW5nXG4gKiBpbiBvcmRlciBmb3IgdGhlbSB0byB3b3JrIGNvcnJlY3RseS4gU2V0IHRoZSBmb2xsb3dpbmcgdG8gdHJ1ZSBpZiB5b3UgYXJlXG4gKiBnb2luZyB0byBhY2hpZXZlIHRoaXMgYnkgbWFudWFsbHkgcmVtb3ZpbmcvY29tbWVudGluZyBvdXQgYW55IHdoaXRlc3BhY2UgaW5cbiAqIHlvdXIgSFRNTCB5b3Vyc2VsZi5cbiAqXG4gKiBTZXR0aW5nIHRoaXMgdG8gZmFsc2UgaW52b2tlcyBhIGhhY2sgd2hpY2ggY2Fubm90IGFsd2F5cyBiZSBndWFyYW50ZWVkLFxuICogcGxlYXNlIHNlZSB0aGUgZm9sbG93aW5nIGZvciBtb3JlIGRldGFpbDpcbiAqXG4gKiBnaXRodWIuY29tL2Nzc3dpemFyZHJ5L2Nzc3dpemFyZHJ5LWdyaWRzL2NvbW1pdC83NDRkNGIyM2M5ZDJiNzdkNjA1YjU5OTFlNTRhMzk3ZGY3MmUwNjg4XG4gKiBnaXRodWIuY29tL2Nzc3dpemFyZHJ5L2ludWl0LmNzcy9pc3N1ZXMvMTcwI2lzc3VlY29tbWVudC0xNDg1OTM3MVxuICovXG4kdXNlLW1hcmt1cC1maXg6ICAgICAgICB0cnVlICFkZWZhdWx0O1xuXG5cbi8qKlxuICogRGVmaW5lIHlvdXIgYnJlYWtwb2ludHMuIFRoZSBmaXJzdCB2YWx1ZSBpcyB0aGUgcHJlZml4IHRoYXQgc2hhbGwgYmUgdXNlZCBmb3JcbiAqIHlvdXIgY2xhc3NlcyAoZS5nLiBgLnBhbG0tLW9uZS1oYWxmYCksIHRoZSBzZWNvbmQgdmFsdWUgaXMgdGhlIG1lZGlhIHF1ZXJ5XG4gKiB0aGF0IHRoZSBicmVha3BvaW50IGZpcmVzIGF0LlxuICovXG4kYnJlYWtwb2ludHM6IChcbiAgICAncGFsbScgJyhtYXgtd2lkdGg6IDQ4MHB4KScsXG4gICAgJ2xhcCcgJyhtaW4td2lkdGg6IDQ4MXB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KScsXG4gICAgJ3BvcnRhYmxlJyAnKG1heC13aWR0aDogMTAyM3B4KScsXG4gICAgJ2Rlc2snICcobWluLXdpZHRoOiAxMDI0cHgpJ1xuKSAhZGVmYXVsdDtcblxuXG4vKipcbiAqIERlZmluZSB3aGljaCBuYW1lc3BhY2VkIGJyZWFrcG9pbnRzIHlvdSB3b3VsZCBsaWtlIHRvIGdlbmVyYXRlIGZvciBlYWNoIG9mXG4gKiB3aWR0aHMsIHB1c2ggYW5kIHB1bGwuIFRoaXMgaXMgaGFuZHkgaWYgeW91IG9ubHkgbmVlZCBwdWxsIG9uLCBzYXksIGRlc2ssIG9yXG4gKiB5b3Ugb25seSBuZWVkIGEgbmV3IHdpZHRoIGJyZWFrcG9pbnQgYXQgbW9iaWxlIHNpemVzLiBJdCBhbGxvd3MgeW91IHRvIG9ubHlcbiAqIGNvbXBpbGUgYXMgbXVjaCBDU1MgYXMgeW91IG5lZWQuIEFsbCBhcmUgdHVybmVkIG9uIGJ5IGRlZmF1bHQsIGJ1dCB5b3UgY2FuXG4gKiBhZGQgYW5kIHJlbW92ZSBicmVha3BvaW50cyBhdCB3aWxsLlxuICpcbiAqIFB1c2ggYW5kIHB1bGwgc2hhbGwgb25seSBiZSB1c2VkIGlmIGAkcHVzaGAgYW5kL29yIGAkcHVsbGAgYW5kIGAkcmVzcG9uc2l2ZWBcbiAqIGhhdmUgYmVlbiBzZXQgdG8g4oCYdHJ1ZeKAmS5cbiAqL1xuJGJyZWFrcG9pbnQtaGFzLXdpZHRoczogKCdwYWxtJywgJ2xhcCcsICdwb3J0YWJsZScsICdkZXNrJykgIWRlZmF1bHQ7XG4kYnJlYWtwb2ludC1oYXMtcHVzaDogICAoJ3BhbG0nLCAnbGFwJywgJ3BvcnRhYmxlJywgJ2Rlc2snKSAhZGVmYXVsdDtcbiRicmVha3BvaW50LWhhcy1wdWxsOiAgICgncGFsbScsICdsYXAnLCAncG9ydGFibGUnLCAnZGVzaycpICFkZWZhdWx0O1xuXG5cbi8qKlxuICogWW91IGRvIG5vdCBuZWVkIHRvIGVkaXQgYW55dGhpbmcgZnJvbSB0aGlzIGxpbmUgb253YXJkOyBjc3N3aXphcmRyeS1ncmlkcyBpc1xuICogZ29vZCB0byBnby4gSGFwcHkgZ3JpZGRpbuKAmSFcbiAqL1xuJGNsYXNzLXR5cGU6IGlmKCR1c2Utc2lsZW50LWNsYXNzZXMsIHVucXVvdGUoXCIlXCIpLCB1bnF1b3RlKFwiLlwiKSk7XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkTUlYSU5TXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBUaGVzZSBtaXhpbnMgYXJlIGZvciB0aGUgbGlicmFyeSB0byB1c2Ugb25seSwgeW91IHNob3VsZCBub3QgbmVlZCB0byBtb2RpZnlcbiAqIHRoZW0gYXQgYWxsLlxuICpcbiAqIEVuY2xvc2UgYSBibG9jayBvZiBjb2RlIHdpdGggYSBtZWRpYSBxdWVyeSBhcyBuYW1lZCBpbiBgJGJyZWFrcG9pbnRzYC5cbiAqL1xuQG1peGluIGdyaWQtbWVkaWEtcXVlcnkoJG1lZGlhLXF1ZXJ5KSB7XG4gICAgJGJyZWFrcG9pbnQtZm91bmQ6IGZhbHNlO1xuXG4gICAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICAgICAgJG5hbWU6IG50aCgkYnJlYWtwb2ludCwgMSk7XG4gICAgICAgICRkZWNsYXJhdGlvbjogbnRoKCRicmVha3BvaW50LCAyKTtcblxuICAgICAgICBAaWYgJG1lZGlhLXF1ZXJ5ID09ICRuYW1lIGFuZCAkZGVjbGFyYXRpb24ge1xuICAgICAgICAgICAgJGJyZWFrcG9pbnQtZm91bmQ6IHRydWU7XG5cbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgI3skZGVjbGFyYXRpb259IHtcbiAgICAgICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBpZiBub3QgJGJyZWFrcG9pbnQtZm91bmQge1xuICAgICAgICBAd2FybiBcIkJyZWFrcG9pbnQg4oCYI3skbWVkaWEtcXVlcnl94oCZIGRvZXMgbm90IGV4aXN0XCI7XG4gICAgfVxufVxuXG5cbi8qKlxuICogRHJvcCByZWxhdGl2ZSBwb3NpdGlvbmluZyBpbnRvIHNpbGVudCBjbGFzc2VzIHdoaWNoIGNhbuKAmXQgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAqIHRoZSBgW2NsYXNzKj1cInB1c2gtLVwiXWAgYW5kIGBbY2xhc3MqPVwicHVsbC0tXCJdYCBzZWxlY3RvcnMuXG4gKi9cbkBtaXhpbiBzaWxlbnQtcmVsYXRpdmUge1xuICAgIEBpZiAkdXNlLXNpbGVudC1jbGFzc2VzIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgfVxufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJEdSSUQgU0VUVVBcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIDEuIEFsbG93IHRoZSBncmlkIHN5c3RlbSB0byBiZSB1c2VkIG9uIGxpc3RzLlxuICogMi4gUmVtb3ZlIGFueSBtYXJnaW5zIGFuZCBwYWRkaW5ncyB0aGF0IG1pZ2h0IGFmZmVjdCB0aGUgZ3JpZCBzeXN0ZW0uXG4gKiAzLiBBcHBseSBhIG5lZ2F0aXZlIGBtYXJnaW4tbGVmdGAgdG8gbmVnYXRlIHRoZSBjb2x1bW5z4oCZIGd1dHRlcnMuXG4gKi9cbiN7JGNsYXNzLXR5cGV9Z3JpZCB7XG4gICAgbGlzdC1zdHlsZTpub25lOyAgICAgICAgICAgICAgICAvKiBbMV0gKi9cbiAgICBtYXJnaW46MDsgICAgICAgICAgICAgICAgICAgICAgIC8qIFsyXSAqL1xuICAgIHBhZGRpbmc6MDsgICAgICAgICAgICAgICAgICAgICAgLyogWzJdICovXG4gICAgbWFyZ2luLWxlZnQ6LSRndXR0ZXI7ICAgICAgICAgICAvKiBbM10gKi9cbiAgICBAaWYgbm90ICR1c2UtbWFya3VwLWZpeCB7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOi0wLjMxZW07XG4gICAgfVxufVxuXG5AaWYgbm90ICR1c2UtbWFya3VwLWZpeCB7XG4gICAgLyogT3BlcmEgaGFjayAqL1xuICAgIC5vcGVyYTotby1wcmVmb2N1cyxcbiAgICAjeyRjbGFzcy10eXBlfWdyaWQge1xuICAgICAgICB3b3JkLXNwYWNpbmc6LTAuNDNlbTtcbiAgICB9XG59XG5cblxuLyoqXG4gKiAxLiBDYXVzZSBjb2x1bW5zIHRvIHN0YWNrIHNpZGUtYnktc2lkZS5cbiAqIDIuIFNwYWNlIGNvbHVtbnMgYXBhcnQuXG4gKiAzLiBBbGlnbiBjb2x1bW5zIHRvIHRoZSB0b3BzIG9mIGVhY2ggb3RoZXIuXG4gKiA0LiBGdWxsLXdpZHRoIHVubGVzcyB0b2xkIHRvIGJlaGF2ZSBvdGhlcndpc2UuXG4gKiA1LiBSZXF1aXJlZCB0byBjb21iaW5lIGZsdWlkIHdpZHRocyBhbmQgZml4ZWQgZ3V0dGVycy5cbiAqL1xuI3skY2xhc3MtdHlwZX1ncmlkX19pdGVtIHtcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jazsgICAgICAgICAgIC8qIFsxXSAqL1xuICAgIHBhZGRpbmctbGVmdDokZ3V0dGVyOyAgICAgICAgICAgLyogWzJdICovXG4gICAgdmVydGljYWwtYWxpZ246dG9wOyAgICAgICAgICAgICAvKiBbM10gKi9cbiAgICBAaWYgJG1vYmlsZS1maXJzdCB7XG4gICAgICAgIHdpZHRoOjEwMCU7ICAgICAgICAgICAgICAgICAvKiBbNF0gKi9cbiAgICB9XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7ICAvKiBbNV0gKi9cbiAgICAtbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDsgIC8qIFs1XSAqL1xuICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDsgIC8qIFs1XSAqL1xuICAgIEBpZiBub3QgJHVzZS1tYXJrdXAtZml4IHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xuICAgICAgICB3b3JkLXNwYWNpbmc6bm9ybWFsO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIFJldmVyc2VkIGdyaWRzIGFsbG93IHlvdSB0byBzdHJ1Y3R1cmUgeW91ciBzb3VyY2UgaW4gdGhlIG9wcG9zaXRlIG9yZGVyIHRvXG4gKiBob3cgeW91ciByZW5kZXJlZCBsYXlvdXQgd2lsbCBhcHBlYXIuIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuI3skY2xhc3MtdHlwZX1ncmlkLS1yZXYge1xuICAgIGRpcmVjdGlvbjpydGw7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuXG4gICAgPiAjeyRjbGFzcy10eXBlfWdyaWRfX2l0ZW0ge1xuICAgICAgICBkaXJlY3Rpb246bHRyO1xuICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgfVxufVxuXG5cbi8qKlxuICogR3V0dGVybGVzcyBncmlkcyBoYXZlIGFsbCB0aGUgcHJvcGVydGllcyBvZiByZWd1bGFyIGdyaWRzLCBtaW51cyBhbnkgc3BhY2luZy5cbiAqIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuI3skY2xhc3MtdHlwZX1ncmlkLS1mdWxsIHtcbiAgICBtYXJnaW4tbGVmdDowO1xuXG4gICAgPiAjeyRjbGFzcy10eXBlfWdyaWRfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6MDtcbiAgICB9XG59XG5cblxuLyoqXG4gKiBBbGlnbiB0aGUgZW50aXJlIGdyaWQgdG8gdGhlIHJpZ2h0LiBFeHRlbmRzIGAuZ3JpZGAuXG4gKi9cbiN7JGNsYXNzLXR5cGV9Z3JpZC0tcmlnaHQge1xuICAgIHRleHQtYWxpZ246cmlnaHQ7XG5cbiAgICA+ICN7JGNsYXNzLXR5cGV9Z3JpZF9faXRlbSB7XG4gICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICB9XG59XG5cblxuLyoqXG4gKiBDZW50ZXJlZCBncmlkcyBhbGlnbiBncmlkIGl0ZW1zIGNlbnRyYWxseSB3aXRob3V0IG5lZWRpbmcgdG8gdXNlIHB1c2ggb3IgcHVsbFxuICogY2xhc3Nlcy4gRXh0ZW5kcyBgLmdyaWRgLlxuICovXG4jeyRjbGFzcy10eXBlfWdyaWQtLWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG5cbiAgICA+ICN7JGNsYXNzLXR5cGV9Z3JpZF9faXRlbSB7XG4gICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICB9XG59XG5cblxuLyoqXG4gKiBBbGlnbiBncmlkIGNlbGxzIHZlcnRpY2FsbHkgKGAuZ3JpZC0tbWlkZGxlYCBvciBgLmdyaWQtLWJvdHRvbWApLiBFeHRlbmRzXG4gKiBgLmdyaWRgLlxuICovXG4jeyRjbGFzcy10eXBlfWdyaWQtLW1pZGRsZSB7XG5cbiAgICA+ICN7JGNsYXNzLXR5cGV9Z3JpZF9faXRlbSB7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICB9XG59XG5cbiN7JGNsYXNzLXR5cGV9Z3JpZC0tYm90dG9tIHtcblxuICAgID4gI3skY2xhc3MtdHlwZX1ncmlkX19pdGVtIHtcbiAgICAgICAgdmVydGljYWwtYWxpZ246Ym90dG9tO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIENyZWF0ZSBncmlkcyB3aXRoIG5hcnJvd2VyIGd1dHRlcnMuIEV4dGVuZHMgYC5ncmlkYC5cbiAqL1xuI3skY2xhc3MtdHlwZX1ncmlkLS1uYXJyb3cge1xuICAgIG1hcmdpbi1sZWZ0Oi0oJGd1dHRlciAvIDIpO1xuXG4gICAgPiAjeyRjbGFzcy10eXBlfWdyaWRfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6JGd1dHRlciAvIDI7XG4gICAgfVxufVxuXG5cbi8qKlxuICogQ3JlYXRlIGdyaWRzIHdpdGggd2lkZXIgZ3V0dGVycy4gRXh0ZW5kcyBgLmdyaWRgLlxuICovXG4jeyRjbGFzcy10eXBlfWdyaWQtLXdpZGUge1xuICAgIG1hcmdpbi1sZWZ0Oi0oJGd1dHRlciAqIDIpO1xuXG4gICAgPiAjeyRjbGFzcy10eXBlfWdyaWRfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6JGd1dHRlciAqIDI7XG4gICAgfVxufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJFdJRFRIU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogQ3JlYXRlIG91ciB3aWR0aCBjbGFzc2VzLCBwcmVmaXhlZCBieSB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZS5cbiAqL1xuQG1peGluIGRldmljZS10eXBlKCRuYW1lc3BhY2U6XCJcIikge1xuICAgICRwcmVmaXg6ICRjbGFzcy10eXBlICsgJG5hbWVzcGFjZTtcblxuICAgIC8qKlxuICAgICAqIFdob2xlXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS13aG9sZSAgICAgICAgIHsgd2lkdGg6MTAwJTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBIYWx2ZXNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLWhhbGYgICAgICAgICAgeyB3aWR0aDo1MCU7IH1cblxuXG4gICAgLyoqXG4gICAgICogVGhpcmRzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS10aGlyZCAgICAgICAgIHsgd2lkdGg6MzMuMzMzJTsgfVxuICAgICN7JHByZWZpeH10d28tdGhpcmRzICAgICAgICB7IHdpZHRoOjY2LjY2NiU7IH1cblxuXG4gICAgLyoqXG4gICAgICogUXVhcnRlcnNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXF1YXJ0ZXIgICAgICAgeyB3aWR0aDoyNSU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXF1YXJ0ZXJzICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtaGFsZjsgfVxuICAgICN7JHByZWZpeH10aHJlZS1xdWFydGVycyAgICB7IHdpZHRoOjc1JTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBGaWZ0aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLWZpZnRoICAgICAgICAgeyB3aWR0aDoyMCU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLWZpZnRocyAgICAgICAgeyB3aWR0aDo0MCU7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtZmlmdGhzICAgICAgeyB3aWR0aDo2MCU7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci1maWZ0aHMgICAgICAgeyB3aWR0aDo4MCU7IH1cblxuXG4gICAgLyoqXG4gICAgICogU2l4dGhzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS1zaXh0aCAgICAgICAgIHsgd2lkdGg6MTYuNjY2JTsgfVxuICAgICN7JHByZWZpeH10d28tc2l4dGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS10aGlyZDsgfVxuICAgICN7JHByZWZpeH10aHJlZS1zaXh0aHMgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fWZvdXItc2l4dGhzICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dHdvLXRoaXJkczsgfVxuICAgICN7JHByZWZpeH1maXZlLXNpeHRocyAgICAgICB7IHdpZHRoOjgzLjMzMyU7IH1cblxuXG4gICAgLyoqXG4gICAgICogRWlnaHRoc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtZWlnaHRoICAgICAgICB7IHdpZHRoOjEyLjUlOyB9XG4gICAgI3skcHJlZml4fXR3by1laWdodGhzICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXF1YXJ0ZXI7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtZWlnaHRocyAgICAgeyB3aWR0aDozNy41JTsgfVxuICAgICN7JHByZWZpeH1mb3VyLWVpZ2h0aHMgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fWZpdmUtZWlnaHRocyAgICAgIHsgd2lkdGg6NjIuNSU7IH1cbiAgICAjeyRwcmVmaXh9c2l4LWVpZ2h0aHMgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH10aHJlZS1xdWFydGVyczsgfVxuICAgICN7JHByZWZpeH1zZXZlbi1laWdodGhzICAgICB7IHdpZHRoOjg3LjUlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIFRlbnRoc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtdGVudGggICAgICAgICB7IHdpZHRoOjEwJTsgfVxuICAgICN7JHByZWZpeH10d28tdGVudGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1maWZ0aDsgfVxuICAgICN7JHByZWZpeH10aHJlZS10ZW50aHMgICAgICB7IHdpZHRoOjMwJTsgfVxuICAgICN7JHByZWZpeH1mb3VyLXRlbnRocyAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXR3by1maWZ0aHM7IH1cbiAgICAjeyRwcmVmaXh9Zml2ZS10ZW50aHMgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtaGFsZjsgfVxuICAgICN7JHByZWZpeH1zaXgtdGVudGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXRocmVlLWZpZnRoczsgfVxuICAgICN7JHByZWZpeH1zZXZlbi10ZW50aHMgICAgICB7IHdpZHRoOjcwJTsgfVxuICAgICN7JHByZWZpeH1laWdodC10ZW50aHMgICAgICB7IEBleHRlbmQgI3skcHJlZml4fWZvdXItZmlmdGhzOyB9XG4gICAgI3skcHJlZml4fW5pbmUtdGVudGhzICAgICAgIHsgd2lkdGg6OTAlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIFR3ZWxmdGhzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS10d2VsZnRoICAgICAgIHsgd2lkdGg6OC4zMzMlOyB9XG4gICAgI3skcHJlZml4fXR3by10d2VsZnRocyAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXNpeHRoOyB9XG4gICAgI3skcHJlZml4fXRocmVlLXR3ZWxmdGhzICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXF1YXJ0ZXI7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci10d2VsZnRocyAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtdGhpcmQ7IH1cbiAgICAjeyRwcmVmaXh9Zml2ZS10d2VsZnRocyAgICAgeyB3aWR0aDo0MS42NjYlIH1cbiAgICAjeyRwcmVmaXh9c2l4LXR3ZWxmdGhzICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtaGFsZjsgfVxuICAgICN7JHByZWZpeH1zZXZlbi10d2VsZnRocyAgICB7IHdpZHRoOjU4LjMzMyU7IH1cbiAgICAjeyRwcmVmaXh9ZWlnaHQtdHdlbGZ0aHMgICAgeyBAZXh0ZW5kICN7JHByZWZpeH10d28tdGhpcmRzOyB9XG4gICAgI3skcHJlZml4fW5pbmUtdHdlbGZ0aHMgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dGhyZWUtcXVhcnRlcnM7IH1cbiAgICAjeyRwcmVmaXh9dGVuLXR3ZWxmdGhzICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1maXZlLXNpeHRoczsgfVxuICAgICN7JHByZWZpeH1lbGV2ZW4tdHdlbGZ0aHMgICB7IHdpZHRoOjkxLjY2NiU7IH1cbn1cblxuXG4vKipcbiAqIE91ciByZWd1bGFyLCBub24tcmVzcG9uc2l2ZSB3aWR0aCBjbGFzc2VzLlxuICovXG5AaW5jbHVkZSBkZXZpY2UtdHlwZTtcblxuXG4vKipcbiAqIE91ciByZXNwb25zaXZlIGNsYXNzZXMsIGlmIHdlIGhhdmUgZW5hYmxlZCB0aGVtLlxuICovXG5AaWYgJHJlc3BvbnNpdmUge1xuXG4gICAgQGVhY2ggJG5hbWUgaW4gJGJyZWFrcG9pbnQtaGFzLXdpZHRocyB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtbWVkaWEtcXVlcnkoJG5hbWUpIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGRldmljZS10eXBlKCcjeyRuYW1lfS0tJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICRQVVNIXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBQdXNoIGNsYXNzZXMsIHRvIG1vdmUgZ3JpZCBpdGVtcyBvdmVyIHRvIHRoZSByaWdodCBieSBjZXJ0YWluIGFtb3VudHMuXG4gKi9cbkBtaXhpbiBwdXNoLXNldHVwKCRuYW1lc3BhY2U6IFwiXCIpIHtcbiAgICAkcHJlZml4OiAkY2xhc3MtdHlwZSArIFwicHVzaC0tXCIgKyAkbmFtZXNwYWNlO1xuXG4gICAgLyoqXG4gICAgICogV2hvbGVcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXdob2xlICAgICAgICAgICB7IGxlZnQ6MTAwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIEhhbHZlc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtaGFsZiAgICAgICAgICAgIHsgbGVmdDo1MCU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBUaGlyZHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXRoaXJkICAgICAgICAgICB7IGxlZnQ6MzMuMzMzJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXR3by10aGlyZHMgICAgICAgICAgeyBsZWZ0OjY2LjY2NiU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBRdWFydGVyc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtcXVhcnRlciAgICAgICAgIHsgbGVmdDoyNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH10d28tcXVhcnRlcnMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLWhhbGY7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtcXVhcnRlcnMgICAgICB7IGxlZnQ6NzUlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cblxuXG4gICAgLyoqXG4gICAgICogRmlmdGhzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS1maWZ0aCAgICAgICAgICAgeyBsZWZ0OjIwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXR3by1maWZ0aHMgICAgICAgICAgeyBsZWZ0OjQwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXRocmVlLWZpZnRocyAgICAgICAgeyBsZWZ0OjYwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fWZvdXItZmlmdGhzICAgICAgICAgeyBsZWZ0OjgwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIFNpeHRoc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtc2l4dGggICAgICAgICAgIHsgbGVmdDoxNi42NjYlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXNpeHRocyAgICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS10aGlyZDsgfVxuICAgICN7JHByZWZpeH10aHJlZS1zaXh0aHMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLWhhbGY7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci1zaXh0aHMgICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXR3by10aGlyZHM7IH1cbiAgICAjeyRwcmVmaXh9Zml2ZS1zaXh0aHMgICAgICAgICB7IGxlZnQ6ODMuMzMzJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIEVpZ2h0aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLWVpZ2h0aCAgICAgICAgICB7IGxlZnQ6MTIuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH10d28tZWlnaHRocyAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXF1YXJ0ZXI7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtZWlnaHRocyAgICAgICB7IGxlZnQ6MzcuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1mb3VyLWVpZ2h0aHMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLWhhbGY7IH1cbiAgICAjeyRwcmVmaXh9Zml2ZS1laWdodGhzICAgICAgICB7IGxlZnQ6NjIuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1zaXgtZWlnaHRocyAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dGhyZWUtcXVhcnRlcnM7IH1cbiAgICAjeyRwcmVmaXh9c2V2ZW4tZWlnaHRocyAgICAgICB7IGxlZnQ6ODcuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBUZW50aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXRlbnRoICAgICAgICAgICB7IGxlZnQ6MTAlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXRlbnRocyAgICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1maWZ0aDsgfVxuICAgICN7JHByZWZpeH10aHJlZS10ZW50aHMgICAgICAgIHsgbGVmdDozMCU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1mb3VyLXRlbnRocyAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dHdvLWZpZnRoczsgfVxuICAgICN7JHByZWZpeH1maXZlLXRlbnRocyAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLWhhbGY7IH1cbiAgICAjeyRwcmVmaXh9c2l4LXRlbnRocyAgICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXRocmVlLWZpZnRoczsgfVxuICAgICN7JHByZWZpeH1zZXZlbi10ZW50aHMgICAgICAgIHsgbGVmdDo3MCU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1laWdodC10ZW50aHMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9Zm91ci1maWZ0aHM7IH1cbiAgICAjeyRwcmVmaXh9bmluZS10ZW50aHMgICAgICAgICB7IGxlZnQ6OTAlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cblxuXG4gICAgLyoqXG4gICAgICogVHdlbGZ0aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXR3ZWxmdGggICAgICAgICB7IGxlZnQ6OC4zMzMlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXR3ZWxmdGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1zaXh0aDsgfVxuICAgICN7JHByZWZpeH10aHJlZS10d2VsZnRocyAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXF1YXJ0ZXI7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci10d2VsZnRocyAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS10aGlyZDsgfVxuICAgICN7JHByZWZpeH1maXZlLXR3ZWxmdGhzICAgICAgIHsgbGVmdDo0MS42NjYlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9c2l4LXR3ZWxmdGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fXNldmVuLXR3ZWxmdGhzICAgICAgeyBsZWZ0OjU4LjMzMyU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1laWdodC10d2VsZnRocyAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dHdvLXRoaXJkczsgfVxuICAgICN7JHByZWZpeH1uaW5lLXR3ZWxmdGhzICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dGhyZWUtcXVhcnRlcnM7IH1cbiAgICAjeyRwcmVmaXh9dGVuLXR3ZWxmdGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fWZpdmUtc2l4dGhzOyB9XG4gICAgI3skcHJlZml4fWVsZXZlbi10d2VsZnRocyAgICAgeyBsZWZ0OjkxLjY2NiU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxufVxuXG5AaWYgJHB1c2gge1xuXG4gICAgLyoqXG4gICAgICogTm90IGEgcGFydGljdWxhcmx5IGdyZWF0IHNlbGVjdG9yLCBidXQgdGhlIERSWWVzdCB3YXkgdG8gZG8gdGhpbmdzLlxuICAgICAqL1xuICAgIFtjbGFzcyo9XCJwdXNoLS1cIl0geyBwb3NpdGlvbjpyZWxhdGl2ZTsgfVxuXG4gICAgQGluY2x1ZGUgcHVzaC1zZXR1cDtcblxuICAgIEBpZiAkcmVzcG9uc2l2ZSB7XG4gICAgICAgIEBlYWNoICRuYW1lIGluICRicmVha3BvaW50LWhhcy1wdXNoIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGdyaWQtbWVkaWEtcXVlcnkoJG5hbWUpIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBwdXNoLXNldHVwKCcjeyRuYW1lfS0tJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICRQVUxMXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBQdWxsIGNsYXNzZXMsIHRvIG1vdmUgZ3JpZCBpdGVtcyBiYWNrIHRvIHRoZSBsZWZ0IGJ5IGNlcnRhaW4gYW1vdW50cy5cbiAqL1xuQG1peGluIHB1bGwtc2V0dXAoJG5hbWVzcGFjZTogXCJcIikge1xuICAgICRwcmVmaXg6ICRjbGFzcy10eXBlICsgXCJwdWxsLS1cIiArICRuYW1lc3BhY2U7XG5cbiAgICAvKipcbiAgICAgKiBXaG9sZVxuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtd2hvbGUgICAgICAgICAgIHsgcmlnaHQ6MTAwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIEhhbHZlc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtaGFsZiAgICAgICAgICAgIHsgcmlnaHQ6NTAlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cblxuXG4gICAgLyoqXG4gICAgICogVGhpcmRzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS10aGlyZCAgICAgICAgICAgeyByaWdodDozMy4zMzMlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXRoaXJkcyAgICAgICAgICB7IHJpZ2h0OjY2LjY2NiU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBRdWFydGVyc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtcXVhcnRlciAgICAgICAgIHsgcmlnaHQ6MjUlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9dHdvLXF1YXJ0ZXJzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fXRocmVlLXF1YXJ0ZXJzICAgICAgeyByaWdodDo3NSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBGaWZ0aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLWZpZnRoICAgICAgICAgICB7IHJpZ2h0OjIwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXR3by1maWZ0aHMgICAgICAgICAgeyByaWdodDo0MCU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH10aHJlZS1maWZ0aHMgICAgICAgIHsgcmlnaHQ6NjAlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci1maWZ0aHMgICAgICAgICB7IHJpZ2h0OjgwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIFNpeHRoc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtc2l4dGggICAgICAgICAgIHsgcmlnaHQ6MTYuNjY2JTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXR3by1zaXh0aHMgICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtdGhpcmQ7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtc2l4dGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fWZvdXItc2l4dGhzICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH10d28tdGhpcmRzOyB9XG4gICAgI3skcHJlZml4fWZpdmUtc2l4dGhzICAgICAgICAgeyByaWdodDo4My4zMzMlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cblxuXG4gICAgLyoqXG4gICAgICogRWlnaHRoc1xuICAgICAqL1xuICAgICN7JHByZWZpeH1vbmUtZWlnaHRoICAgICAgICAgIHsgcmlnaHQ6MTIuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH10d28tZWlnaHRocyAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXF1YXJ0ZXI7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtZWlnaHRocyAgICAgICB7IHJpZ2h0OjM3LjUlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9Zm91ci1laWdodGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fWZpdmUtZWlnaHRocyAgICAgICAgeyByaWdodDo2Mi41JTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXNpeC1laWdodGhzICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH10aHJlZS1xdWFydGVyczsgfVxuICAgICN7JHByZWZpeH1zZXZlbi1laWdodGhzICAgICAgIHsgcmlnaHQ6ODcuNSU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBUZW50aHNcbiAgICAgKi9cbiAgICAjeyRwcmVmaXh9b25lLXRlbnRoICAgICAgICAgICB7IHJpZ2h0OjEwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fXR3by10ZW50aHMgICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtZmlmdGg7IH1cbiAgICAjeyRwcmVmaXh9dGhyZWUtdGVudGhzICAgICAgICB7IHJpZ2h0OjMwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG4gICAgI3skcHJlZml4fWZvdXItdGVudGhzICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH10d28tZmlmdGhzOyB9XG4gICAgI3skcHJlZml4fWZpdmUtdGVudGhzICAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtaGFsZjsgfVxuICAgICN7JHByZWZpeH1zaXgtdGVudGhzICAgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9dGhyZWUtZmlmdGhzOyB9XG4gICAgI3skcHJlZml4fXNldmVuLXRlbnRocyAgICAgICAgeyByaWdodDo3MCU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH1laWdodC10ZW50aHMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9Zm91ci1maWZ0aHM7IH1cbiAgICAjeyRwcmVmaXh9bmluZS10ZW50aHMgICAgICAgICB7IHJpZ2h0OjkwJTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG5cblxuICAgIC8qKlxuICAgICAqIFR3ZWxmdGhzXG4gICAgICovXG4gICAgI3skcHJlZml4fW9uZS10d2VsZnRoICAgICAgICAgeyByaWdodDo4LjMzMyU7IEBpbmNsdWRlIHNpbGVudC1yZWxhdGl2ZTsgfVxuICAgICN7JHByZWZpeH10d28tdHdlbGZ0aHMgICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXNpeHRoOyB9XG4gICAgI3skcHJlZml4fXRocmVlLXR3ZWxmdGhzICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1vbmUtcXVhcnRlcjsgfVxuICAgICN7JHByZWZpeH1mb3VyLXR3ZWxmdGhzICAgICAgIHsgQGV4dGVuZCAjeyRwcmVmaXh9b25lLXRoaXJkOyB9XG4gICAgI3skcHJlZml4fWZpdmUtdHdlbGZ0aHMgICAgICAgeyByaWdodDo0MS42NjYlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9c2l4LXR3ZWxmdGhzICAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fW9uZS1oYWxmOyB9XG4gICAgI3skcHJlZml4fXNldmVuLXR3ZWxmdGhzICAgICAgeyByaWdodDo1OC4zMzMlOyBAaW5jbHVkZSBzaWxlbnQtcmVsYXRpdmU7IH1cbiAgICAjeyRwcmVmaXh9ZWlnaHQtdHdlbGZ0aHMgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXR3by10aGlyZHM7IH1cbiAgICAjeyRwcmVmaXh9bmluZS10d2VsZnRocyAgICAgICB7IEBleHRlbmQgI3skcHJlZml4fXRocmVlLXF1YXJ0ZXJzOyB9XG4gICAgI3skcHJlZml4fXRlbi10d2VsZnRocyAgICAgICAgeyBAZXh0ZW5kICN7JHByZWZpeH1maXZlLXNpeHRoczsgfVxuICAgICN7JHByZWZpeH1lbGV2ZW4tdHdlbGZ0aHMgICAgIHsgcmlnaHQ6OTEuNjY2JTsgQGluY2x1ZGUgc2lsZW50LXJlbGF0aXZlOyB9XG59XG5cbkBpZiAkcHVsbCB7XG5cbiAgICAvKipcbiAgICAgKiBOb3QgYSBwYXJ0aWN1bGFybHkgZ3JlYXQgc2VsZWN0b3IsIGJ1dCB0aGUgRFJZZXN0IHdheSB0byBkbyB0aGluZ3MuXG4gICAgICovXG4gICAgW2NsYXNzKj1cInB1bGwtLVwiXSB7IHBvc2l0aW9uOnJlbGF0aXZlOyB9XG5cbiAgICBAaW5jbHVkZSBwdWxsLXNldHVwO1xuXG4gICAgQGlmICRyZXNwb25zaXZlIHtcbiAgICAgICAgQGVhY2ggJG5hbWUgaW4gJGJyZWFrcG9pbnQtaGFzLXB1bGwge1xuICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1tZWRpYS1xdWVyeSgkbmFtZSkge1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHB1bGwtc2V0dXAoJyN7JG5hbWV9LS0nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufSIsIi5ncmlkX19jb250YWluZXIge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDAgJGd1dHRlcjtcbiAgICBtYXgtd2lkdGg6IDYyMHB4O1xufSIsImh0bWwge1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuYm9keSB7XG4gICAgZm9udC1mYW1pbHk6ICdTb3VyY2UgU2FucyBQcm8nLCBzYW5zLXNlcmlmO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG59IiwiLm5hdi1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xufVxuXG4ubmF2IHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgICZfX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnR3JlYXQgVmliZXMnLCBjdXJzaXZlO1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMjBweCAzMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSIsIi5zZWN0aW9uX19tYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiA0O1xufVxuXG4uc2VjdGlvbl9fbWFwLFxuLm1hcCB7XG4gICAgaGVpZ2h0OiA1MHZoO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubWFwIHtcbiAgICBib3JkZXI6IDA7XG59IiwiLnNlY3Rpb24ge1xuICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICAmX19oYWxmIHtcbiAgICAgICAgaGVpZ2h0OiA1MHZoO1xuICAgIH1cblxuICAgICZfX2NvbnRlbnQge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDQ7XG4gICAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnR3JlYXQgVmliZXMnLCBjdXJzaXZlO1xuICAgICAgICBmb250LXNpemU6IDcycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi5sb2dvIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4ubG9nby1uYW1lcyB7XG4gICAgZmlsbDogI2ZmZjtcbiAgICB3aWR0aDogNzUwcHg7XG59XG5cbi5pbnRybyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDQ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2J1ZGFwZXN0LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuLmRldGFpbHMge1xuICAgICZfX3RleHQge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB9XG59XG5cbi5nZWxsZXJ0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmJhY2tncm91bmQtZml4ZWQge1xuICAgIGNsaXA6IHJlY3QoMCxhdXRvLGF1dG8sMCk7XG4gICAgLXdlYmtpdC1jbGlwLXBhdGg6IGluc2V0KDAgMCAwIDApO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgei1pbmRleDogMjtcblxuICAgICZfX2ltYWdlIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICB6LWluZGV4OiAzO1xuICAgIH1cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
